{"blob_link": "https://github.com/awslabs/duvet/blob/", "issue_link": "https://github.com/awslabs/duvet/issues", "specifications": {"compliance/duvet-specification.txt": {"requirements": [2, 3, 4, 5, 6, 7, 9, 11, 13, 16, 19, 22, 24, 25, 26, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 56, 58, 59, 60, 61, 64, 66, 67, 69, 71, 73, 75, 77, 80, 82, 84, 86, 88, 90, 93, 96, 99, 100, 101, 102, 103, 104, 106, 109, 111, 114, 117, 120, 123, 126, 129, 132, 135, 138, 141, 143, 145, 147, 149, 151, 154, 157, 159, 161], "sections": [{"id": "1", "title": "Conventions and Definitions", "lines": ["The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",", "\"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and", "\"OPTIONAL\" in this document are to be interpreted as described in BCP", "14 [RFC2119] [RFC8174] when, and only when, they appear in all", "capitals, as shown here"]}, {"id": "2.2.1", "title": "2.2.1", "lines": [[[[142, 143], 232, "The name of the sections MUST NOT be nested."]], [[[144, 145], 226, "A requirements section MUST be the top level containing header."]], [[[146, 147], 232, "A header MUST NOT itself be a requirement."]], [[[148, 149], 225, "A section MUST be indexable by combining different levels of naming."]]], "requirements": [143, 145, 147, 149]}, {"id": "2.2.2", "title": "2.2.2", "lines": [[[[46, 47], 232, "Any complete sentence containing at least one RFC 2119 keyword MUST be treated as a requirement."]], [[[48, 49], 104, "A requirement MAY contain multiple RFC 2119 keywords."]], [[[50, 51], 232, "A requirement MUST be terminated by one of the following:"]], [[[52, 53], 232, "In the case of requirement terminated by a list, the text proceeding the list MUST be concatenated with each element of the list to form a requirement."]], [[[54, 55], 104, "List elements MAY have RFC 2119 keywords, this is the same as regular sentences with multiple keywords."]], [[[56], 224, "Sublists MUST be treated as if the parent item were terminated by the sublist."]], [[[57, 58], 240, "List elements MAY contain a period (.) or exclamation point (!) and this punctuation MUST NOT terminate the requirement by excluding the following elements from the list of requirements."]], [[[59], 160, "In the case of requirement terminated by a table, the text proceeding the table SHOULD be concatenated with each row of the table to form a requirement."]], [[[60], 96, "Table cells MAY have RFC 2119 keywords, this is the same as regular sentences with multiple keywords."]], [[[61], 224, "Table cells MAY contain a period (.) or exclamation point (!) and this punctuation MUST NOT terminate the requirement by excluding the following rows from the table of requirements."]]], "requirements": [47, 49, 51, 53, 55, 56, 58, 59, 60, 61]}, {"id": "2.2.3", "title": "2.2.3", "lines": [[[[3], 224, "For backwards compatibility Duvet MUST support this older simpler form of requirement identification."]], [[[4], 224, "Any complete sentence containing at least one RFC 2119 keyword MUST be treated as a requirement."]], [[[5], 96, "A requirement MAY contain multiple RFC 2119 keywords."]], [[[6], 224, "A requirement MUST be terminated by one of the following:"]], [[[7], 224, "For a given a specification Duvet MUST use one way to identify requirements."]]], "requirements": [3, 4, 5, 6, 7]}, {"id": "2.2.4", "title": "2.2.4", "lines": [[[[89, 90], 225, "Duvet MUST be able to parse specifications formatted as:"]]], "requirements": [90]}, {"id": "2.2.4.1", "title": "2.2.4.1", "lines": [[[[62, 63, 64], 180, "Duvet SHOULD be able to parse requirements formatted as Toml files."]], [[[65, 66], 161, "Duvet SHOULD be able to record parsed requirements into Toml Files."]]], "requirements": [64, 66]}, {"id": "2.3.1", "title": "2.3.1", "lines": [[[[76, 77], 232, "The default identifier for the meta part in source documents MUST be //= followed by a single space."]], [[[78, 79, 80], 248, "This identifier of meta parts MUST be configurable."]]], "requirements": [77, 80]}, {"id": "2.3.2", "title": "2.3.2", "lines": [[[[133, 134, 135], 244, "The first line of the meta part identifies the location of the content, it MUST be parsed as a URL."]], [[[136, 137, 138], 244, "All parts of the URL other than a URL fragment MUST be optional and MUST identify the specification that contains this section and content."]], [[[139, 140, 141], 244, "The URL MUST contain a URL fragment that uniquely identifies the section that contains this content."]]], "requirements": [135, 138, 141]}, {"id": "2.3.3", "title": "2.3.3", "lines": [[[[91, 92, 93], 244, "If the meta part is a single line then the type MUST be citation."]], [[[94, 95, 96], 244, "If a second meta line exists it MUST start with \"type=\"."]], [[[97, 98, 99], 244, "The type MUST be a valid annotation type string:"]]], "requirements": [93, 96, 99]}, {"id": "2.3.4", "title": "2.3.4", "lines": [[[[155, 156, 157], 244, "It MUST start with \"reason=\"."]], [[[158, 159], 104, "A third meta line MAY exist: Reason."]], [[[160, 161], 232, "The rest of this line and the following meta lines MUST be parsed as the annotation's reason until there are no more meta lines."]]], "requirements": [157, 159, 161]}, {"id": "2.3.6", "title": "2.3.6", "lines": [[[[23, 24], 232, "A one or more line meta part MUST be followed by at least a one line content part."]], [[[25], 224, "The default identifier for the content part in software documents MUST be \"//#\" followed by a single space."]], [[[26], 224, "This identifier of content parts MUST be configurable."]], [[[27], 224, "All content part lines MUST be consecutive."]]], "requirements": [24, 25, 26, 27]}, {"id": "2.4.1", "title": "2.4.1", "lines": [[[[100], 224, "For an annotation to match a specification the annotation's content MUST exist in the specification's section identified by the annotation's meta location URL."]], [[[101], 224, "The match between the annotation content and the specification text MUST be case-sensitive but MUST NOT be white space sensitive and MUST uniquely identify text in the specification."]], [[[102], 224, "Elements of a list MUST NOT be matched by their order within the list."]], [[[103], 224, "Rows of a table MUST NOT be matched by their order within the table."]], [[[104], 96, "This means that an annotation MAY contain a table that is a subset of the rows in the specification."]]], "requirements": [100, 101, 102, 103, 104]}, {"id": "2.5", "title": "2.5", "lines": [[[[14, 15, 16], 244, "Duvet MUST analyze the matching annotations, generating Matching Labels."]], [[[17, 18, 19], 244, "Duvet MUST label requirements matched to annotations as follows:"]], [[[20, 21, 22], 116, "Matching Labels MAY be exclusive."]]], "requirements": [16, 19, 22]}, {"id": "2.5.1", "title": "2.5.1", "lines": [[[[0, 1, 2], 244, "A specification requirement MUST be labeled \"Implemented\" if there exists at least one matching annotation of type:"]]], "requirements": [2]}, {"id": "2.5.2", "title": "2.5.2", "lines": [[[[152, 153, 154], 244, "A specification requirement MUST be labeled \"Attested\" if there exists at least one matching annotation of type"]]], "requirements": [154]}, {"id": "2.5.3", "title": "2.5.3", "lines": [[[[150, 151], 225, "A specification requirement MUST be labeled \"Excused\" and MUST only be labeled \"Excused\" if there exists a matching annotation of type \"exception\" and the annotation has a \"reason\"."]]], "requirements": [151]}, {"id": "2.5.4", "title": "2.5.4", "lines": [[[[105, 106], 240, "A specification requirement MUST be labeled \"Unexcused\" and MUST only be labeled \"Unexcused\" if there exists a matching annotation of type \"exception\" and the annotation does NOT have a \"reason\"."]]], "requirements": [106]}, {"id": "2.6.1", "title": "2.6.1", "lines": [[[[107, 108, 109], 240, "Duvet MUST analyze the matching labels for every requirement; the result of this analysis is the requirement's Status."]], [[[110, 111], 232, "Requirement Statuses MUST be exclusive."]], [[[112, 113, 114], 244, "The Requirement Statuses MUST be:"]], [[[115, 116, 117], 244, "*  Complete - The requirement MUST have both the labels \"Implemented\" and \"Attested\""]], [[[118, 119, 120], 244, "*  Missing Proof - The requirement MUST only have the label \"Implemented\""]], [[[121, 122, 123], 244, "*  Excused - The requirement MUST only have the label \"Excused\""]], [[[124, 125, 126], 244, "*  Missing Implementation - The requirement MUST only have the label \"Attested\""]], [[[127, 128, 129], 244, "*  Not started - The requirement MUST NOT have any labels"]], [[[130, 131, 132], 244, "*  Missing Reason - The requirement MUST have the label \"Unexcused\""]]], "requirements": [109, 111, 114, 117, 120, 123, 126, 129, 132]}, {"id": "2.6.2", "title": "2.6.2", "lines": [[[[67], 224, "For Duvet to pass the Status of every \"MUST\" and \"MUST NOT\" requirement MUST be Complete or Excused."]], [[[68, 69], 232, "Duvet MUST return \"0\" for Pass."]], [[[70, 71], 168, "Duvet SHOULD print a success message."]], [[[72, 73], 232, "Duvet MUST NOT return \"0\" for Fail."]], [[[74, 75], 168, "Duvet SHOULD print a failure message."]]], "requirements": [67, 69, 71, 73, 75]}, {"id": "2.6.3", "title": "2.6.3", "lines": [[[[81, 82], 232, "It MUST have all a link for each included specifications."]], [[[83, 84], 232, "It MUST have all a link for annotations that do not match any included specifications."]], [[[85, 86], 225, "It MUST have all a link for annotations not associated with any specifications."]], [[[87, 88], 232, "For each link it MUST have a table summarizing the matrix of requirements crossed annotation types, and include totals for both sides."]]], "requirements": [82, 84, 86, 88]}, {"id": "2.6.4", "title": "2.6.4", "lines": [[[[8, 9], 232, "It MUST have a table summarizing the matrix of requirements across annotation types, and include totals for both sides."]], [[[10, 11], 232, "It MUST show a table with a row for each requirement."]], [[[12, 13], 232, "The table MUST have a column for:"]]], "requirements": [9, 11, 13]}, {"id": "2.6.5", "title": "2.6.5", "lines": [[[[28, 29], 225, "It MUST show all text from the section."]], [[[30, 31], 232, "It MUST highlight the text for every requirement."]], [[[32, 33], 232, "It MUST highlight the text that matches any annotation."]], [[[34, 35], 232, "Any highlighted text MUST have a mouse over that shows its annotation information."]], [[[36, 37], 232, "Clicking on any highlighted text MUST bring up a popup that shows:"]], [[[38, 39], 168, "This link SHOULD include the line number."]], [[[40, 41], 232, "Selecting any text of the specification and right-clicking on it MUST bring up a popup for the selected text that shows:"]], [[[42, 43], 232, "It MUST show a table with a row for each requirement included in this section."]], [[[44, 45], 232, "The table MUST have a column for:"]]], "requirements": [29, 31, 33, 35, 37, 39, 41, 43, 45]}, {"id": "3", "title": "Normative References", "lines": ["[RFC2119]  Bradner, S., \"Key words for use in RFCs to Indicate", "           Requirement Levels\", BCP 14, RFC 2119,", "           DOI 10.17487/RFC2119, March 1997,", "           <https://www.rfc-editor.org/info/rfc2119>.", "", "[RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC", "           2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,", "           May 2017, <https://www.rfc-editor.org/info/rfc8174>.", "", "Amazon AWS", "Amazon AWS", "", "Email: aws-cryptools@amazon.com"]}]}}, "annotations": [{"source": "/Users/yuancc/Documents/GitHub/duvet-1/src/duvet/identifiers.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.5.1", "line": 40, "type": "CITATION"}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/test/integration/test_implementation_parsing.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.5.1", "line": 66, "type": "TEST"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.5.1", "type": "SPEC", "level": "MUST", "comment": "A specification requirement MUST be labeled \"Implemented\" if there exists at least one matching annotation of type:"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.3", "type": "SPEC", "level": "MUST", "comment": "For backwards compatibility Duvet MUST support this older simpler form of requirement identification."}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.3", "type": "SPEC", "level": "MUST", "comment": "Any complete sentence containing at least one RFC 2119 keyword MUST be treated as a requirement."}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.3", "type": "SPEC", "level": "MAY", "comment": "A requirement MAY contain multiple RFC 2119 keywords."}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.3", "type": "SPEC", "level": "MUST", "comment": "A requirement MUST be terminated by one of the following:"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.3", "type": "SPEC", "level": "MUST", "comment": "For a given a specification Duvet MUST use one way to identify requirements."}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/src/duvet/html.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.4", "line": 78, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.4", "type": "SPEC", "level": "MUST", "comment": "It MUST have a table summarizing the matrix of requirements across annotation types, and include totals for both sides."}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/src/duvet/html.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.4", "line": 83, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.4", "type": "SPEC", "level": "MUST", "comment": "It MUST show a table with a row for each requirement."}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/src/duvet/html.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.4", "line": 87, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.4", "type": "SPEC", "level": "MUST", "comment": "The table MUST have a column for:"}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/src/duvet/summary.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.5", "line": 62, "type": "CITATION"}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/test/unit/test_summary.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.5", "line": 61, "type": "TEST"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.5", "type": "SPEC", "level": "MUST", "comment": "Duvet MUST analyze the matching annotations, generating Matching Labels."}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/src/duvet/summary.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.5", "line": 65, "type": "CITATION"}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/test/unit/test_summary.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.5", "line": 65, "type": "TEST"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.5", "type": "SPEC", "level": "MUST", "comment": "Duvet MUST label requirements matched to annotations as follows:"}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/src/duvet/summary.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.5", "line": 68, "type": "CITATION"}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/test/unit/test_summary.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.5", "line": 69, "type": "TEST"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.5", "type": "SPEC", "level": "MAY", "comment": "Matching Labels MAY be exclusive."}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/src/duvet/requirement_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.6", "line": 281, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.6", "type": "SPEC", "level": "MUST", "comment": "A one or more line meta part MUST be followed by at least a one line content part."}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.6", "type": "SPEC", "level": "MUST", "comment": "The default identifier for the content part in software documents MUST be \"//#\" followed by a single space."}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.6", "type": "SPEC", "level": "MUST", "comment": "This identifier of content parts MUST be configurable."}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.6", "type": "SPEC", "level": "MUST", "comment": "All content part lines MUST be consecutive."}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/src/duvet/html.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.5", "line": 91, "type": "TODO"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.5", "type": "SPEC", "level": "MUST", "comment": "It MUST show all text from the section."}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/src/duvet/html.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.5", "line": 99, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.5", "type": "SPEC", "level": "MUST", "comment": "It MUST highlight the text for every requirement."}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/src/duvet/html.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.5", "line": 103, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.5", "type": "SPEC", "level": "MUST", "comment": "It MUST highlight the text that matches any annotation."}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/src/duvet/html.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.5", "line": 107, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.5", "type": "SPEC", "level": "MUST", "comment": "Any highlighted text MUST have a mouse over that shows its annotation information."}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/www/src/spec.js", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.5", "line": 275, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.5", "type": "SPEC", "level": "MUST", "comment": "Clicking on any highlighted text MUST bring up a popup that shows:"}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/www/src/spec.js", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.5", "line": 279, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.5", "type": "SPEC", "level": "SHOULD", "comment": "This link SHOULD include the line number."}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/www/src/spec.js", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.5", "line": 283, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.5", "type": "SPEC", "level": "MUST", "comment": "Selecting any text of the specification and right-clicking on it MUST bring up a popup for the selected text that shows:"}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/www/src/spec.js", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.5", "line": 288, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.5", "type": "SPEC", "level": "MUST", "comment": "It MUST show a table with a row for each requirement included in this section."}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/src/duvet/html.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.5", "line": 95, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.5", "type": "SPEC", "level": "MUST", "comment": "The table MUST have a column for:"}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/src/duvet/requirement_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.2", "line": 255, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.2", "type": "SPEC", "level": "MUST", "comment": "Any complete sentence containing at least one RFC 2119 keyword MUST be treated as a requirement."}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/src/duvet/requirement_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.2", "line": 259, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.2", "type": "SPEC", "level": "MAY", "comment": "A requirement MAY contain multiple RFC 2119 keywords."}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/src/duvet/requirement_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.2", "line": 263, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.2", "type": "SPEC", "level": "MUST", "comment": "A requirement MUST be terminated by one of the following:"}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/src/duvet/requirement_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.2", "line": 267, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.2", "type": "SPEC", "level": "MUST", "comment": "In the case of requirement terminated by a list, the text proceeding the list MUST be concatenated with each element of the list to form a requirement."}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/src/duvet/requirement_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.2", "line": 272, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.2", "type": "SPEC", "level": "MAY", "comment": "List elements MAY have RFC 2119 keywords, this is the same as regular sentences with multiple keywords."}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.2", "type": "SPEC", "level": "MUST", "comment": "Sublists MUST be treated as if the parent item were terminated by the sublist."}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/src/duvet/requirement_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.2", "line": 276, "type": "CITATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.2", "type": "SPEC", "level": "MUST", "comment": "List elements MAY contain a period (.) or exclamation point (!) and this punctuation MUST NOT terminate the requirement by excluding the following elements from the list of requirements."}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.2", "type": "SPEC", "level": "SHOULD", "comment": "In the case of requirement terminated by a table, the text proceeding the table SHOULD be concatenated with each row of the table to form a requirement."}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.2", "type": "SPEC", "level": "MAY", "comment": "Table cells MAY have RFC 2119 keywords, this is the same as regular sentences with multiple keywords."}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.2", "type": "SPEC", "level": "MUST", "comment": "Table cells MAY contain a period (.) or exclamation point (!) and this punctuation MUST NOT terminate the requirement by excluding the following rows from the table of requirements."}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/src/duvet/spec_toml_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.4.1", "line": 112, "type": "CITATION"}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/test/unit/test_annotation_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.4.1", "line": 112, "type": "TEST"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.4.1", "type": "SPEC", "level": "SHOULD", "comment": "Duvet SHOULD be able to parse requirements formatted as Toml files."}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/src/duvet/structures.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.4.1", "line": 284, "type": "TODO"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.4.1", "type": "SPEC", "level": "SHOULD", "comment": "Duvet SHOULD be able to record parsed requirements into Toml Files."}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.2", "type": "SPEC", "level": "MUST", "comment": "For Duvet to pass the Status of every \"MUST\" and \"MUST NOT\" requirement MUST be Complete or Excused."}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/src/duvet/cli.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.2", "line": 59, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.2", "type": "SPEC", "level": "MUST", "comment": "Duvet MUST return \"0\" for Pass."}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/src/duvet/cli.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.2", "line": 53, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.2", "type": "SPEC", "level": "SHOULD", "comment": "Duvet SHOULD print a success message."}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/src/duvet/cli.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.2", "line": 50, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.2", "type": "SPEC", "level": "MUST", "comment": "Duvet MUST NOT return \"0\" for Fail."}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/src/duvet/cli.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.2", "line": 62, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.2", "type": "SPEC", "level": "SHOULD", "comment": "Duvet SHOULD print a failure message."}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/src/duvet/annotation_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.1", "line": 187, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.1", "type": "SPEC", "level": "MUST", "comment": "The default identifier for the meta part in source documents MUST be //= followed by a single space."}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/src/duvet/annotation_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.1", "line": 36, "type": "IMPLICATION"}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/src/duvet/_config.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.1", "line": 141, "type": "CITATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.1", "type": "SPEC", "level": "MUST", "comment": "This identifier of meta parts MUST be configurable."}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/src/duvet/html.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.3", "line": 61, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.3", "type": "SPEC", "level": "MUST", "comment": "It MUST have all a link for each included specifications."}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/src/duvet/html.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.3", "line": 70, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.3", "type": "SPEC", "level": "MUST", "comment": "It MUST have all a link for annotations that do not match any included specifications."}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/src/duvet/html.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.3", "line": 74, "type": "TODO"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.3", "type": "SPEC", "level": "MUST", "comment": "It MUST have all a link for annotations not associated with any specifications."}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/src/duvet/html.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.3", "line": 65, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.3", "type": "SPEC", "level": "MUST", "comment": "For each link it MUST have a table summarizing the matrix of requirements crossed annotation types, and include totals for both sides."}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/src/duvet/rfc.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.4", "line": 92, "type": "TODO"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.4", "type": "SPEC", "level": "MUST", "comment": "Duvet MUST be able to parse specifications formatted as:"}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/src/duvet/annotation_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.3", "line": 107, "type": "CITATION"}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/test/unit/test_annotation_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.3", "line": 116, "type": "TEST"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.3", "type": "SPEC", "level": "MUST", "comment": "If the meta part is a single line then the type MUST be citation."}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/src/duvet/annotation_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.3", "line": 109, "type": "CITATION"}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/test/unit/test_annotation_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.3", "line": 120, "type": "TEST"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.3", "type": "SPEC", "level": "MUST", "comment": "If a second meta line exists it MUST start with \"type=\"."}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/src/duvet/annotation_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.3", "line": 111, "type": "CITATION"}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/test/unit/test_annotation_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.3", "line": 124, "type": "TEST"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.3", "type": "SPEC", "level": "MUST", "comment": "The type MUST be a valid annotation type string:"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.4.1", "type": "SPEC", "level": "MUST", "comment": "For an annotation to match a specification the annotation's content MUST exist in the specification's section identified by the annotation's meta location URL."}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.4.1", "type": "SPEC", "level": "MUST", "comment": "The match between the annotation content and the specification text MUST be case-sensitive but MUST NOT be white space sensitive and MUST uniquely identify text in the specification."}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.4.1", "type": "SPEC", "level": "MUST", "comment": "Elements of a list MUST NOT be matched by their order within the list."}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.4.1", "type": "SPEC", "level": "MUST", "comment": "Rows of a table MUST NOT be matched by their order within the table."}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.4.1", "type": "SPEC", "level": "MAY", "comment": "This means that an annotation MAY contain a table that is a subset of the rows in the specification."}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/src/duvet/summary.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.5.4", "line": 71, "type": "CITATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.5.4", "type": "SPEC", "level": "MUST", "comment": "A specification requirement MUST be labeled \"Unexcused\" and MUST only be labeled \"Unexcused\" if there exists a matching annotation of type \"exception\" and the annotation does NOT have a \"reason\"."}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/src/duvet/structures.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.1", "line": 292, "type": "CITATION"}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/test/integration/test_implementation_parsing.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.1", "line": 34, "type": "CITATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.1", "type": "SPEC", "level": "MUST", "comment": "Duvet MUST analyze the matching labels for every requirement; the result of this analysis is the requirement's Status."}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/src/duvet/structures.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.1", "line": 296, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.1", "type": "SPEC", "level": "MUST", "comment": "Requirement Statuses MUST be exclusive."}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/src/duvet/structures.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.1", "line": 97, "type": "CITATION"}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/test/integration/test_implementation_parsing.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.1", "line": 38, "type": "TEST"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.1", "type": "SPEC", "level": "MUST", "comment": "The Requirement Statuses MUST be:"}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/src/duvet/structures.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.1", "line": 105, "type": "CITATION"}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/test/integration/test_implementation_parsing.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.1", "line": 42, "type": "TEST"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.1", "type": "SPEC", "level": "MUST", "comment": "*  Complete - The requirement MUST have both the labels \"Implemented\" and \"Attested\""}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/src/duvet/structures.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.1", "line": 101, "type": "CITATION"}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/test/integration/test_implementation_parsing.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.1", "line": 46, "type": "TEST"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.1", "type": "SPEC", "level": "MUST", "comment": "*  Missing Proof - The requirement MUST only have the label \"Implemented\""}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/src/duvet/structures.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.1", "line": 109, "type": "CITATION"}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/test/integration/test_implementation_parsing.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.1", "line": 50, "type": "TEST"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.1", "type": "SPEC", "level": "MUST", "comment": "*  Excused - The requirement MUST only have the label \"Excused\""}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/src/duvet/structures.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.1", "line": 121, "type": "CITATION"}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/test/integration/test_implementation_parsing.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.1", "line": 54, "type": "TEST"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.1", "type": "SPEC", "level": "MUST", "comment": "*  Missing Implementation - The requirement MUST only have the label \"Attested\""}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/src/duvet/structures.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.1", "line": 117, "type": "CITATION"}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/test/integration/test_implementation_parsing.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.1", "line": 58, "type": "TEST"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.1", "type": "SPEC", "level": "MUST", "comment": "*  Not started - The requirement MUST NOT have any labels"}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/src/duvet/structures.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.1", "line": 113, "type": "CITATION"}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/test/integration/test_implementation_parsing.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.1", "line": 62, "type": "TEST"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.1", "type": "SPEC", "level": "MUST", "comment": "*  Missing Reason - The requirement MUST have the label \"Unexcused\""}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/src/duvet/annotation_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.2", "line": 53, "type": "CITATION"}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/test/unit/test_annotation_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.2", "line": 99, "type": "TEST"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.2", "type": "SPEC", "level": "MUST", "comment": "The first line of the meta part identifies the location of the content, it MUST be parsed as a URL."}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/src/duvet/annotation_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.2", "line": 95, "type": "CITATION"}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/test/unit/test_annotation_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.2", "line": 103, "type": "TEST"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.2", "type": "SPEC", "level": "MUST", "comment": "All parts of the URL other than a URL fragment MUST be optional and MUST identify the specification that contains this section and content."}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/src/duvet/annotation_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.2", "line": 98, "type": "CITATION"}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/test/unit/test_annotation_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.2", "line": 108, "type": "TEST"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.2", "type": "SPEC", "level": "MUST", "comment": "The URL MUST contain a URL fragment that uniquely identifies the section that contains this content."}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/src/duvet/structures.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.1", "line": 288, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.1", "type": "SPEC", "level": "MUST", "comment": "The name of the sections MUST NOT be nested."}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/src/duvet/spec_md_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.1", "line": 108, "type": "EXCEPTION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.1", "type": "SPEC", "level": "MUST", "comment": "A requirements section MUST be the top level containing header."}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/src/duvet/spec_md_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.1", "line": 112, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.1", "type": "SPEC", "level": "MUST", "comment": "A header MUST NOT itself be a requirement."}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/src/duvet/spec_md_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.1", "line": 116, "type": "TODO"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.1", "type": "SPEC", "level": "MUST", "comment": "A section MUST be indexable by combining different levels of naming."}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/src/duvet/annotation_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.5.3", "line": 191, "type": "TODO"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.5.3", "type": "SPEC", "level": "MUST", "comment": "A specification requirement MUST be labeled \"Excused\" and MUST only be labeled \"Excused\" if there exists a matching annotation of type \"exception\" and the annotation has a \"reason\"."}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/src/duvet/identifiers.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.5.2", "line": 50, "type": "CITATION"}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/test/functional/test_annotation_parsing.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.5.2", "line": 48, "type": "TEST"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.5.2", "type": "SPEC", "level": "MUST", "comment": "A specification requirement MUST be labeled \"Attested\" if there exists at least one matching annotation of type"}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/src/duvet/annotation_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.4", "line": 57, "type": "CITATION"}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/test/unit/test_annotation_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.4", "line": 95, "type": "TEST"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.4", "type": "SPEC", "level": "MUST", "comment": "It MUST start with \"reason=\"."}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/src/duvet/annotation_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.4", "line": 59, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.4", "type": "SPEC", "level": "MAY", "comment": "A third meta line MAY exist: Reason."}, {"source": "/Users/yuancc/Documents/GitHub/duvet-1/src/duvet/annotation_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.4", "line": 62, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.4", "type": "SPEC", "level": "MUST", "comment": "The rest of this line and the following meta lines MUST be parsed as the annotation's reason until there are no more meta lines."}], "statuses": {"2": {"spec": 115, "citation": 115, "test": 115, "related": [0, 1, 2]}, "3": {"spec": 101, "related": [3]}, "4": {"spec": 96, "related": [4]}, "5": {"spec": 53, "related": [5]}, "6": {"spec": 57, "related": [6]}, "7": {"spec": 76, "related": [7]}, "9": {"spec": 119, "implication": 119, "related": [8, 9]}, "11": {"spec": 53, "implication": 53, "related": [10, 11]}, "13": {"spec": 33, "implication": 33, "related": [12, 13]}, "16": {"spec": 72, "citation": 72, "test": 72, "related": [14, 15, 16]}, "19": {"spec": 64, "citation": 64, "test": 64, "related": [17, 18, 19]}, "22": {"spec": 33, "citation": 33, "test": 33, "related": [20, 21, 22]}, "24": {"spec": 82, "implication": 82, "related": [23, 24]}, "25": {"spec": 107, "related": [25]}, "26": {"spec": 54, "related": [26]}, "27": {"spec": 43, "related": [27]}, "29": {"spec": 39, "todo": 39, "related": [28, 29]}, "31": {"spec": 49, "implication": 49, "related": [30, 31]}, "33": {"spec": 55, "implication": 55, "related": [32, 33]}, "35": {"spec": 82, "implication": 82, "related": [34, 35]}, "37": {"spec": 66, "implication": 66, "related": [36, 37]}, "39": {"spec": 41, "implication": 41, "related": [38, 39]}, "41": {"spec": 120, "implication": 120, "related": [40, 41]}, "43": {"spec": 78, "implication": 78, "related": [42, 43]}, "45": {"spec": 33, "implication": 33, "related": [44, 45]}, "47": {"spec": 96, "implication": 96, "related": [46, 47]}, "49": {"spec": 53, "implication": 53, "related": [48, 49]}, "51": {"spec": 57, "implication": 57, "related": [50, 51]}, "53": {"spec": 151, "implication": 151, "related": [52, 53]}, "55": {"spec": 103, "implication": 103, "related": [54, 55]}, "56": {"spec": 78, "related": [56]}, "58": {"spec": 186, "citation": 186, "related": [57, 58]}, "59": {"spec": 152, "related": [59]}, "60": {"spec": 101, "related": [60]}, "61": {"spec": 181, "related": [61]}, "64": {"spec": 67, "citation": 67, "test": 67, "related": [62, 63, 64]}, "66": {"spec": 67, "todo": 67, "related": [65, 66]}, "67": {"spec": 100, "related": [67]}, "69": {"spec": 31, "implication": 31, "related": [68, 69]}, "71": {"spec": 37, "implication": 37, "related": [70, 71]}, "73": {"spec": 35, "implication": 35, "related": [72, 73]}, "75": {"spec": 37, "implication": 37, "related": [74, 75]}, "77": {"spec": 100, "implication": 100, "related": [76, 77]}, "80": {"spec": 51, "citation": 51, "implication": 51, "related": [78, 79, 80]}, "82": {"spec": 57, "implication": 57, "related": [81, 82]}, "84": {"spec": 86, "implication": 86, "related": [83, 84]}, "86": {"spec": 79, "todo": 79, "related": [85, 86]}, "88": {"spec": 134, "implication": 134, "related": [87, 88]}, "90": {"spec": 56, "todo": 56, "related": [89, 90]}, "93": {"spec": 65, "citation": 65, "test": 65, "related": [91, 92, 93]}, "96": {"spec": 56, "citation": 56, "test": 56, "related": [94, 95, 96]}, "99": {"spec": 48, "citation": 48, "test": 48, "related": [97, 98, 99]}, "100": {"spec": 159, "related": [100]}, "101": {"spec": 182, "related": [101]}, "102": {"spec": 70, "related": [102]}, "103": {"spec": 68, "related": [103]}, "104": {"spec": 100, "related": [104]}, "106": {"spec": 195, "citation": 195, "related": [105, 106]}, "109": {"spec": 118, "citation": 118, "related": [107, 108, 109]}, "111": {"spec": 39, "implication": 39, "related": [110, 111]}, "114": {"spec": 33, "citation": 33, "test": 33, "related": [112, 113, 114]}, "117": {"spec": 84, "citation": 84, "test": 84, "related": [115, 116, 117]}, "120": {"spec": 73, "citation": 73, "test": 73, "related": [118, 119, 120]}, "123": {"spec": 63, "citation": 63, "test": 63, "related": [121, 122, 123]}, "126": {"spec": 79, "citation": 79, "test": 79, "related": [124, 125, 126]}, "129": {"spec": 57, "citation": 57, "test": 57, "related": [127, 128, 129]}, "132": {"spec": 67, "citation": 67, "test": 67, "related": [130, 131, 132]}, "135": {"spec": 99, "citation": 99, "test": 99, "related": [133, 134, 135]}, "138": {"spec": 139, "citation": 139, "test": 139, "related": [136, 137, 138]}, "141": {"spec": 100, "citation": 100, "test": 100, "related": [139, 140, 141]}, "143": {"spec": 44, "implication": 44, "related": [142, 143]}, "145": {"spec": 63, "exception": 63, "related": [144, 145]}, "147": {"spec": 42, "implication": 42, "related": [146, 147]}, "149": {"spec": 68, "todo": 68, "related": [148, 149]}, "151": {"spec": 181, "todo": 181, "related": [150, 151]}, "154": {"spec": 111, "citation": 111, "test": 111, "related": [152, 153, 154]}, "157": {"spec": 29, "citation": 29, "test": 29, "related": [155, 156, 157]}, "159": {"spec": 36, "implication": 36, "related": [158, 159]}, "161": {"spec": 128, "implication": 128, "related": [160, 161]}}, "refs": [{}, {"todo": true}, {"exception": true}, {"exception": true, "todo": true}, {"test": true}, {"test": true, "todo": true}, {"test": true, "exception": true}, {"test": true, "exception": true, "todo": true}, {"implication": true}, {"implication": true, "todo": true}, {"implication": true, "exception": true}, {"implication": true, "exception": true, "todo": true}, {"implication": true, "test": true}, {"implication": true, "test": true, "todo": true}, {"implication": true, "test": true, "exception": true}, {"implication": true, "test": true, "exception": true, "todo": true}, {"citation": true}, {"citation": true, "todo": true}, {"citation": true, "exception": true}, {"citation": true, "exception": true, "todo": true}, {"citation": true, "test": true}, {"citation": true, "test": true, "todo": true}, {"citation": true, "test": true, "exception": true}, {"citation": true, "test": true, "exception": true, "todo": true}, {"citation": true, "implication": true}, {"citation": true, "implication": true, "todo": true}, {"citation": true, "implication": true, "exception": true}, {"citation": true, "implication": true, "exception": true, "todo": true}, {"citation": true, "implication": true, "test": true}, {"citation": true, "implication": true, "test": true, "todo": true}, {"citation": true, "implication": true, "test": true, "exception": true}, {"citation": true, "implication": true, "test": true, "exception": true, "todo": true}, {"spec": true}, {"spec": true, "todo": true}, {"spec": true, "exception": true}, {"spec": true, "exception": true, "todo": true}, {"spec": true, "test": true}, {"spec": true, "test": true, "todo": true}, {"spec": true, "test": true, "exception": true}, {"spec": true, "test": true, "exception": true, "todo": true}, {"spec": true, "implication": true}, {"spec": true, "implication": true, "todo": true}, {"spec": true, "implication": true, "exception": true}, {"spec": true, "implication": true, "exception": true, "todo": true}, {"spec": true, "implication": true, "test": true}, {"spec": true, "implication": true, "test": true, "todo": true}, {"spec": true, "implication": true, "test": true, "exception": true}, {"spec": true, "implication": true, "test": true, "exception": true, "todo": true}, {"spec": true, "citation": true}, {"spec": true, "citation": true, "todo": true}, {"spec": true, "citation": true, "exception": true}, {"spec": true, "citation": true, "exception": true, "todo": true}, {"spec": true, "citation": true, "test": true}, {"spec": true, "citation": true, "test": true, "todo": true}, {"spec": true, "citation": true, "test": true, "exception": true}, {"spec": true, "citation": true, "test": true, "exception": true, "todo": true}, {"spec": true, "citation": true, "implication": true}, {"spec": true, "citation": true, "implication": true, "todo": true}, {"spec": true, "citation": true, "implication": true, "exception": true}, {"spec": true, "citation": true, "implication": true, "exception": true, "todo": true}, {"spec": true, "citation": true, "implication": true, "test": true}, {"spec": true, "citation": true, "implication": true, "test": true, "todo": true}, {"spec": true, "citation": true, "implication": true, "test": true, "exception": true}, {"spec": true, "citation": true, "implication": true, "test": true, "exception": true, "todo": true}, {"level": "MAY"}, {"todo": true, "level": "MAY"}, {"exception": true, "level": "MAY"}, {"exception": true, "todo": true, "level": "MAY"}, {"test": true, "level": "MAY"}, {"test": true, "todo": true, "level": "MAY"}, {"test": true, "exception": true, "level": "MAY"}, {"test": true, "exception": true, "todo": true, "level": "MAY"}, {"implication": true, "level": "MAY"}, {"implication": true, "todo": true, "level": "MAY"}, {"implication": true, "exception": true, "level": "MAY"}, {"implication": true, "exception": true, "todo": true, "level": "MAY"}, {"implication": true, "test": true, "level": "MAY"}, {"implication": true, "test": true, "todo": true, "level": "MAY"}, {"implication": true, "test": true, "exception": true, "level": "MAY"}, {"implication": true, "test": true, "exception": true, "todo": true, "level": "MAY"}, {"citation": true, "level": "MAY"}, {"citation": true, "todo": true, "level": "MAY"}, {"citation": true, "exception": true, "level": "MAY"}, {"citation": true, "exception": true, "todo": true, "level": "MAY"}, {"citation": true, "test": true, "level": "MAY"}, {"citation": true, "test": true, "todo": true, "level": "MAY"}, {"citation": true, "test": true, "exception": true, "level": "MAY"}, {"citation": true, "test": true, "exception": true, "todo": true, "level": "MAY"}, {"citation": true, "implication": true, "level": "MAY"}, {"citation": true, "implication": true, "todo": true, "level": "MAY"}, {"citation": true, "implication": true, "exception": true, "level": "MAY"}, {"citation": true, "implication": true, "exception": true, "todo": true, "level": "MAY"}, {"citation": true, "implication": true, "test": true, "level": "MAY"}, {"citation": true, "implication": true, "test": true, "todo": true, "level": "MAY"}, {"citation": true, "implication": true, "test": true, "exception": true, "level": "MAY"}, {"citation": true, "implication": true, "test": true, "exception": true, "todo": true, "level": "MAY"}, {"spec": true, "level": "MAY"}, {"spec": true, "todo": true, "level": "MAY"}, {"spec": true, "exception": true, "level": "MAY"}, {"spec": true, "exception": true, "todo": true, "level": "MAY"}, {"spec": true, "test": true, "level": "MAY"}, {"spec": true, "test": true, "todo": true, "level": "MAY"}, {"spec": true, "test": true, "exception": true, "level": "MAY"}, {"spec": true, "test": true, "exception": true, "todo": true, "level": "MAY"}, {"spec": true, "implication": true, "level": "MAY"}, {"spec": true, "implication": true, "todo": true, "level": "MAY"}, {"spec": true, "implication": true, "exception": true, "level": "MAY"}, {"spec": true, "implication": true, "exception": true, "todo": true, "level": "MAY"}, {"spec": true, "implication": true, "test": true, "level": "MAY"}, {"spec": true, "implication": true, "test": true, "todo": true, "level": "MAY"}, {"spec": true, "implication": true, "test": true, "exception": true, "level": "MAY"}, {"spec": true, "implication": true, "test": true, "exception": true, "todo": true, "level": "MAY"}, {"spec": true, "citation": true, "level": "MAY"}, {"spec": true, "citation": true, "todo": true, "level": "MAY"}, {"spec": true, "citation": true, "exception": true, "level": "MAY"}, {"spec": true, "citation": true, "exception": true, "todo": true, "level": "MAY"}, {"spec": true, "citation": true, "test": true, "level": "MAY"}, {"spec": true, "citation": true, "test": true, "todo": true, "level": "MAY"}, {"spec": true, "citation": true, "test": true, "exception": true, "level": "MAY"}, {"spec": true, "citation": true, "test": true, "exception": true, "todo": true, "level": "MAY"}, {"spec": true, "citation": true, "implication": true, "level": "MAY"}, {"spec": true, "citation": true, "implication": true, "todo": true, "level": "MAY"}, {"spec": true, "citation": true, "implication": true, "exception": true, "level": "MAY"}, {"spec": true, "citation": true, "implication": true, "exception": true, "todo": true, "level": "MAY"}, {"spec": true, "citation": true, "implication": true, "test": true, "level": "MAY"}, {"spec": true, "citation": true, "implication": true, "test": true, "todo": true, "level": "MAY"}, {"spec": true, "citation": true, "implication": true, "test": true, "exception": true, "level": "MAY"}, {"spec": true, "citation": true, "implication": true, "test": true, "exception": true, "todo": true, "level": "MAY"}, {"level": "SHOULD"}, {"todo": true, "level": "SHOULD"}, {"exception": true, "level": "SHOULD"}, {"exception": true, "todo": true, "level": "SHOULD"}, {"test": true, "level": "SHOULD"}, {"test": true, "todo": true, "level": "SHOULD"}, {"test": true, "exception": true, "level": "SHOULD"}, {"test": true, "exception": true, "todo": true, "level": "SHOULD"}, {"implication": true, "level": "SHOULD"}, {"implication": true, "todo": true, "level": "SHOULD"}, {"implication": true, "exception": true, "level": "SHOULD"}, {"implication": true, "exception": true, "todo": true, "level": "SHOULD"}, {"implication": true, "test": true, "level": "SHOULD"}, {"implication": true, "test": true, "todo": true, "level": "SHOULD"}, {"implication": true, "test": true, "exception": true, "level": "SHOULD"}, {"implication": true, "test": true, "exception": true, "todo": true, "level": "SHOULD"}, {"citation": true, "level": "SHOULD"}, {"citation": true, "todo": true, "level": "SHOULD"}, {"citation": true, "exception": true, "level": "SHOULD"}, {"citation": true, "exception": true, "todo": true, "level": "SHOULD"}, {"citation": true, "test": true, "level": "SHOULD"}, {"citation": true, "test": true, "todo": true, "level": "SHOULD"}, {"citation": true, "test": true, "exception": true, "level": "SHOULD"}, {"citation": true, "test": true, "exception": true, "todo": true, "level": "SHOULD"}, {"citation": true, "implication": true, "level": "SHOULD"}, {"citation": true, "implication": true, "todo": true, "level": "SHOULD"}, {"citation": true, "implication": true, "exception": true, "level": "SHOULD"}, {"citation": true, "implication": true, "exception": true, "todo": true, "level": "SHOULD"}, {"citation": true, "implication": true, "test": true, "level": "SHOULD"}, {"citation": true, "implication": true, "test": true, "todo": true, "level": "SHOULD"}, {"citation": true, "implication": true, "test": true, "exception": true, "level": "SHOULD"}, {"citation": true, "implication": true, "test": true, "exception": true, "todo": true, "level": "SHOULD"}, {"spec": true, "level": "SHOULD"}, {"spec": true, "todo": true, "level": "SHOULD"}, {"spec": true, "exception": true, "level": "SHOULD"}, {"spec": true, "exception": true, "todo": true, "level": "SHOULD"}, {"spec": true, "test": true, "level": "SHOULD"}, {"spec": true, "test": true, "todo": true, "level": "SHOULD"}, {"spec": true, "test": true, "exception": true, "level": "SHOULD"}, {"spec": true, "test": true, "exception": true, "todo": true, "level": "SHOULD"}, {"spec": true, "implication": true, "level": "SHOULD"}, {"spec": true, "implication": true, "todo": true, "level": "SHOULD"}, {"spec": true, "implication": true, "exception": true, "level": "SHOULD"}, {"spec": true, "implication": true, "exception": true, "todo": true, "level": "SHOULD"}, {"spec": true, "implication": true, "test": true, "level": "SHOULD"}, {"spec": true, "implication": true, "test": true, "todo": true, "level": "SHOULD"}, {"spec": true, "implication": true, "test": true, "exception": true, "level": "SHOULD"}, {"spec": true, "implication": true, "test": true, "exception": true, "todo": true, "level": "SHOULD"}, {"spec": true, "citation": true, "level": "SHOULD"}, {"spec": true, "citation": true, "todo": true, "level": "SHOULD"}, {"spec": true, "citation": true, "exception": true, "level": "SHOULD"}, {"spec": true, "citation": true, "exception": true, "todo": true, "level": "SHOULD"}, {"spec": true, "citation": true, "test": true, "level": "SHOULD"}, {"spec": true, "citation": true, "test": true, "todo": true, "level": "SHOULD"}, {"spec": true, "citation": true, "test": true, "exception": true, "level": "SHOULD"}, {"spec": true, "citation": true, "test": true, "exception": true, "todo": true, "level": "SHOULD"}, {"spec": true, "citation": true, "implication": true, "level": "SHOULD"}, {"spec": true, "citation": true, "implication": true, "todo": true, "level": "SHOULD"}, {"spec": true, "citation": true, "implication": true, "exception": true, "level": "SHOULD"}, {"spec": true, "citation": true, "implication": true, "exception": true, "todo": true, "level": "SHOULD"}, {"spec": true, "citation": true, "implication": true, "test": true, "level": "SHOULD"}, {"spec": true, "citation": true, "implication": true, "test": true, "todo": true, "level": "SHOULD"}, {"spec": true, "citation": true, "implication": true, "test": true, "exception": true, "level": "SHOULD"}, {"spec": true, "citation": true, "implication": true, "test": true, "exception": true, "todo": true, "level": "SHOULD"}, {"level": "MUST"}, {"todo": true, "level": "MUST"}, {"exception": true, "level": "MUST"}, {"exception": true, "todo": true, "level": "MUST"}, {"test": true, "level": "MUST"}, {"test": true, "todo": true, "level": "MUST"}, {"test": true, "exception": true, "level": "MUST"}, {"test": true, "exception": true, "todo": true, "level": "MUST"}, {"implication": true, "level": "MUST"}, {"implication": true, "todo": true, "level": "MUST"}, {"implication": true, "exception": true, "level": "MUST"}, {"implication": true, "exception": true, "todo": true, "level": "MUST"}, {"implication": true, "test": true, "level": "MUST"}, {"implication": true, "test": true, "todo": true, "level": "MUST"}, {"implication": true, "test": true, "exception": true, "level": "MUST"}, {"implication": true, "test": true, "exception": true, "todo": true, "level": "MUST"}, {"citation": true, "level": "MUST"}, {"citation": true, "todo": true, "level": "MUST"}, {"citation": true, "exception": true, "level": "MUST"}, {"citation": true, "exception": true, "todo": true, "level": "MUST"}, {"citation": true, "test": true, "level": "MUST"}, {"citation": true, "test": true, "todo": true, "level": "MUST"}, {"citation": true, "test": true, "exception": true, "level": "MUST"}, {"citation": true, "test": true, "exception": true, "todo": true, "level": "MUST"}, {"citation": true, "implication": true, "level": "MUST"}, {"citation": true, "implication": true, "todo": true, "level": "MUST"}, {"citation": true, "implication": true, "exception": true, "level": "MUST"}, {"citation": true, "implication": true, "exception": true, "todo": true, "level": "MUST"}, {"citation": true, "implication": true, "test": true, "level": "MUST"}, {"citation": true, "implication": true, "test": true, "todo": true, "level": "MUST"}, {"citation": true, "implication": true, "test": true, "exception": true, "level": "MUST"}, {"citation": true, "implication": true, "test": true, "exception": true, "todo": true, "level": "MUST"}, {"spec": true, "level": "MUST"}, {"spec": true, "todo": true, "level": "MUST"}, {"spec": true, "exception": true, "level": "MUST"}, {"spec": true, "exception": true, "todo": true, "level": "MUST"}, {"spec": true, "test": true, "level": "MUST"}, {"spec": true, "test": true, "todo": true, "level": "MUST"}, {"spec": true, "test": true, "exception": true, "level": "MUST"}, {"spec": true, "test": true, "exception": true, "todo": true, "level": "MUST"}, {"spec": true, "implication": true, "level": "MUST"}, {"spec": true, "implication": true, "todo": true, "level": "MUST"}, {"spec": true, "implication": true, "exception": true, "level": "MUST"}, {"spec": true, "implication": true, "exception": true, "todo": true, "level": "MUST"}, {"spec": true, "implication": true, "test": true, "level": "MUST"}, {"spec": true, "implication": true, "test": true, "todo": true, "level": "MUST"}, {"spec": true, "implication": true, "test": true, "exception": true, "level": "MUST"}, {"spec": true, "implication": true, "test": true, "exception": true, "todo": true, "level": "MUST"}, {"spec": true, "citation": true, "level": "MUST"}, {"spec": true, "citation": true, "todo": true, "level": "MUST"}, {"spec": true, "citation": true, "exception": true, "level": "MUST"}, {"spec": true, "citation": true, "exception": true, "todo": true, "level": "MUST"}, {"spec": true, "citation": true, "test": true, "level": "MUST"}, {"spec": true, "citation": true, "test": true, "todo": true, "level": "MUST"}, {"spec": true, "citation": true, "test": true, "exception": true, "level": "MUST"}, {"spec": true, "citation": true, "test": true, "exception": true, "todo": true, "level": "MUST"}, {"spec": true, "citation": true, "implication": true, "level": "MUST"}, {"spec": true, "citation": true, "implication": true, "todo": true, "level": "MUST"}, {"spec": true, "citation": true, "implication": true, "exception": true, "level": "MUST"}, {"spec": true, "citation": true, "implication": true, "exception": true, "todo": true, "level": "MUST"}, {"spec": true, "citation": true, "implication": true, "test": true, "level": "MUST"}, {"spec": true, "citation": true, "implication": true, "test": true, "todo": true, "level": "MUST"}, {"spec": true, "citation": true, "implication": true, "test": true, "exception": true, "level": "MUST"}, {"spec": true, "citation": true, "implication": true, "test": true, "exception": true, "todo": true, "level": "MUST"}]}