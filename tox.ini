[tox]
envlist =
    autoformat,
    py{39,310}-{local,integ},
    {flake8,pylint}-tests,
    bandit,
    # prone to false positives
    vulture

##############################################################################################
# Additional environments:                                                                   #
#                                                                                            #
# autoformat : Apply all autoformatters.                                                     #
# linters :: Run all linters.                                                                   #
# vulture :: Run vulture. Prone to false-positives.                                          #
#                                                                                            #
##############################################################################################

#########
# Tests #
#########

[testenv:base-command]
commands = pytest --basetemp={envtmpdir} -l {posargs}

[testenv]
sitepackages = False
deps = -rdev_requirements/test-requirements.txt
commands =
    # Local tests: no network access required
    local: {[testenv:base-command]commands} test/ -m local
    # Integration tests: requires network access and might require service credentials
    integ: {[testenv:base-command]commands} test/ -m integ
    # Run all known tests : same requirements as integ
    all: {[testenv:base-command]commands} test/
    # You decide what tests to run
    manual: {[testenv:base-command]commands}

# Run code coverage on the unit tests
[testenv:coverage]
commands = {[testenv:base-command]commands} --cov duvet test/ -m local

###############################
# Formatting and style checks #
###############################

[testenv:flake8]
basepython = python3
deps = -rdev_requirements/linter-requirements.txt
commands =
    flake8 \
        src/duvet/ \
        setup.py

[testenv:flake8-tests]
basepython = {[testenv:flake8]basepython}
deps = -rdev_requirements/linter-requirements.txt
commands =
    flake8 \
        # Ignore F811 redefinition errors in tests (breaks with pytest-mock use)
        # E203 is not PEP8 compliant https://github.com/ambv/black#slices
        # W503 is not PEP8 compliant https://github.com/ambv/black#line-breaks--binary-operators
        --ignore F811,E203,W503,D \
        test/

[testenv:pylint]
basepython = python3
deps =
    {[testenv]deps}
   -rdev_requirements/linter-requirements.txt
commands =
    pylint \
        --rcfile=src/pylintrc \
        src/duvet/  \
        setup.py

[testenv:pylint-tests]
basepython = {[testenv:pylint]basepython}
deps = {[testenv:pylint]deps}
commands =
    pylint \
        --rcfile=test/pylintrc \
        test/unit/ \
        test/functional/ \
        test/integration/

[testenv:bandit]
basepython = python3
deps = -rdev_requirements/linter-requirements.txt
commands = bandit \
    # B322: Ignore Python 2 input check: we only support Python 3
    -s B322 \
    -r src/duvet/

# Prone to false positives: only run manually
[testenv:vulture]
basepython = python3
deps = -rdev_requirements/linter-requirements.txt
commands = vulture src/duvet/

[testenv:blacken-src]
basepython = python3
deps = -rdev_requirements/linter-requirements.txt
commands =
    black --line-length 120 \
        src/duvet/ \
        setup.py \
        test/ \
        {posargs}

[testenv:blacken]
basepython = python3
deps =
    {[testenv:blacken-src]deps}
commands =
    {[testenv:blacken-src]commands}

[testenv:isort-seed]
basepython = python3
deps = -rdev_requirements/linter-requirements.txt
commands = seed-isort-config

[testenv:isort]
basepython = python3
deps = -rdev_requirements/linter-requirements.txt
commands = isort \
    -rc \
        src \
        test \
        setup.py \
    {posargs}

[testenv:autoformat]
basepython = python3
deps =
    {[testenv:isort]deps}
    {[testenv:blacken]deps}
commands =
    {[testenv:isort]commands}
    {[testenv:blacken]commands}

[testenv:linters]
basepython = python3
deps =
    {[testenv:flake8]deps}
    {[testenv:pylint]deps}
    {[testenv:bandit]deps}
commands =
    {[testenv:flake8]commands}
    {[testenv:pylint]commands}
    {[testenv:bandit]commands}
