{
  "blob_link": "report.blob_link",
  "issue_link": "report.issue_link",
  "specifications": {
    "compliance/duvet-specification.txt": {
      "requirements": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
        60,
        61,
        62,
        63,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        76,
        77,
        78
      ],
      "sections": [
        {
          "id": "2.5.1",
          "title": "2.5.1",
          "lines": [
            "# 2.5.1.  Implemented",
            "#",
            "# A specification requirement MUST be labeled \"Implemented\" if there",
            "# exists at least one matching annotation of type:",
            "#",
            "# *  citation",
            "#",
            "# *  untestable",
            "#",
            "# *  implication"
          ],
          "requirements": [
            0
          ]
        },
        {
          "id": "2.2.3",
          "title": "2.2.3",
          "lines": [
            "# 2.2.3.  Legacy Requirement",
            "#",
            "# Older versions of Duvet were more restrictive in parsing",
            "# requirements.  They did not treat elements of lists or rows in a",
            "# table as individual elements.  For backwards compatibility Duvet MUST",
            "# support this older simpler form of requirement identification.  Any",
            "# complete sentence containing at least one RFC 2119 keyword MUST be",
            "# treated as a requirement.  A requirement MAY contain multiple RFC",
            "# 2119 keywords.  A requirement MUST be terminated by one of the",
            "# following:",
            "#",
            "# *  period (.)",
            "#",
            "# *  exclamation point (!)",
            "#",
            "# *  an empty blank line",
            "#",
            "# The main distinction between this legacy and regular requirement",
            "# identification is that there is no sugar for lists or tables.  For a",
            "# given a specification Duvet MUST use one way to identify",
            "# requirements."
          ],
          "requirements": [
            1,
            2,
            3,
            4,
            5
          ]
        },
        {
          "id": "2.6.4",
          "title": "2.6.4",
          "lines": [
            "# 2.6.4.  Specification Overview",
            "#",
            "# The specification overview shows more detailed information about the",
            "# specific specification.  It MUST have a table summarizing the matrix",
            "# of requirements across annotation types, and include totals for both",
            "# sides.  It MUST show a table with a row for each requirement.  The",
            "# table MUST have a column for:",
            "#",
            "# *  Section within the specification - it would be heading in the",
            "#    markdown, section name and number for ietf docs",
            "#",
            "# *  Requirement key word - key word defined in rfc2119",
            "#",
            "# *  Status",
            "#",
            "# *  Text - The requirement text"
          ],
          "requirements": [
            6,
            7,
            8
          ]
        },
        {
          "id": "2.5",
          "title": "2.5",
          "lines": [
            "# 2.5.  Matching Labels",
            "#",
            "# Duvet MUST analyze the matching annotations, generating Matching",
            "# Labels.  Matching Labels MAY be exclusive.  Duvet MUST label",
            "# requirements matched to annotations as follows:"
          ],
          "requirements": [
            9,
            10,
            11
          ]
        },
        {
          "id": "2.3.6",
          "title": "2.3.6",
          "lines": [
            "# 2.3.6.  Content",
            "#",
            "# A one or more line meta part MUST be followed by at least a one line",
            "# content part.  The default identifier for the content part in",
            "# software documents MUST be \"//#\" followed by a single space.  This",
            "# identifier of content parts MUST be configurable.  All content part",
            "# lines MUST be consecutive."
          ],
          "requirements": [
            12,
            13,
            14,
            15
          ]
        },
        {
          "id": "2.6.5",
          "title": "2.6.5",
          "lines": [
            "# 2.6.5.  Specification Section",
            "#",
            "# The specification section shows the specific specification text and",
            "# how this links to annotation.  It MUST show all text from the",
            "# section.  It MUST highlight the text for every requirement.  It MUST",
            "# highlight the text that matches any annotation.  Any highlighted text",
            "# MUST have a mouse over that shows its annotation information.",
            "# Clicking on any highlighted text MUST bring up a popup that shows:",
            "#",
            "# *  The requirement level",
            "#",
            "# *  The text",
            "#",
            "# *  List of quick links to add the text to a Duvet comment for every",
            "#    annotation type",
            "#",
            "# *  If annotations exist, relative links to these files.  This link",
            "#    SHOULD include the line number.",
            "#",
            "# Selecting any text of the specification and right-clicking on it MUST",
            "# bring up a popup for the selected text that shows:",
            "#",
            "# *  The text",
            "#",
            "# *  List of quick links to add the text to a Duvet comment for every",
            "#    annotation type",
            "#",
            "# *  If annotations exist, relative links to these files.  This link",
            "#    SHOULD include the line number.",
            "#",
            "# It MUST show a table with a row for each requirement included in this",
            "# section.  The table MUST have a column for:",
            "#",
            "# *  Section within the specification",
            "#",
            "# *  Requirement key word - key word defined in rfc2119",
            "#",
            "# *  Status",
            "#",
            "# *  Text - The requirement text"
          ],
          "requirements": [
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24
          ]
        },
        {
          "id": "2.2.2",
          "title": "2.2.2",
          "lines": [
            "# 2.2.2.  Requirement",
            "#",
            "# Any complete sentence containing at least one RFC 2119 keyword MUST",
            "# be treated as a requirement.  A requirement MAY contain multiple RFC",
            "# 2119 keywords.  A requirement MUST be terminated by one of the",
            "# following:",
            "#",
            "# *  period (.)",
            "#",
            "# *  exclamation point (!)",
            "#",
            "# *  list",
            "#",
            "# *  table",
            "#",
            "# In the case of requirement terminated by a list, the text proceeding",
            "# the list MUST be concatenated with each element of the list to form a",
            "# requirement.  Taking the above list as an example, Duvet is required",
            "# to be able to recognize 4 different ways to group text into",
            "# requirements.  List elements MAY have RFC 2119 keywords, this is the",
            "# same as regular sentences with multiple keywords.  Sublists MUST be",
            "# treated as if the parent item were terminated by the sublist.  List",
            "# elements MAY contain a period (.) or exclamation point (!) and this",
            "# punctuation MUST NOT terminate the requirement by excluding the",
            "# following elements from the list of requirements.",
            "#",
            "# In the case of requirement terminated by a table, the text proceeding",
            "# the table SHOULD be concatenated with each row of the table to form a",
            "# requirement.  Table cells MAY have RFC 2119 keywords, this is the",
            "# same as regular sentences with multiple keywords.  Table cells MAY",
            "# contain a period (.) or exclamation point (!) and this punctuation",
            "# MUST NOT terminate the requirement by excluding the following rows",
            "# from the table of requirements."
          ],
          "requirements": [
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34
          ]
        },
        {
          "id": "2.2.4.1",
          "title": "2.2.4.1",
          "lines": [
            "# 2.2.4.1.  Toml",
            "#",
            "# Duvet SHOULD be able to parse requirements formatted as Toml files.",
            "#",
            "# Duvet SHOULD be able to record parsed requirements into Toml Files.",
            "#",
            "# These Toml features supports users of Duvet who do not author the",
            "# specifications they are implementing.  As such, they need to",
            "# customize the extracted requirements, modifying the content of",
            "# requirements or adding/removing requirements."
          ],
          "requirements": [
            35,
            36
          ]
        },
        {
          "id": "2.6.2",
          "title": "2.6.2",
          "lines": [
            "# 2.6.2.  Pass/Fail",
            "#",
            "# For Duvet to pass the Status of every \"MUST\" and \"MUST NOT\"",
            "# requirement MUST be Complete or Excused.",
            "# Duvet MUST return \"0\" for Pass.  Duvet SHOULD print a success",
            "# message.",
            "# Duvet MUST NOT return \"0\" for Fail.  Duvet SHOULD print a failure",
            "# message."
          ],
          "requirements": [
            37,
            38,
            39,
            40,
            41
          ]
        },
        {
          "id": "2.3.1",
          "title": "2.3.1",
          "lines": [
            "# 2.3.1.  Meta",
            "#",
            "# The default identifier for the meta part in source documents MUST be",
            "# //= followed by a single space.  This identifier of meta parts MUST",
            "# be configurable."
          ],
          "requirements": [
            42,
            43
          ]
        },
        {
          "id": "2.6.3",
          "title": "2.6.3",
          "lines": [
            "# 2.6.3.  Report Summary",
            "#",
            "# The report summary shows high level information about the linkage",
            "# between annotations and specifications.  It MUST have all a link for",
            "# each included specifications.  It MUST have all a link for",
            "# annotations that do not match any included specifications.  It MUST",
            "# have all a link for annotations not associated with any",
            "# specifications.  For each link it MUST have a table summarizing the",
            "# matrix of requirements crossed annotation types, and include totals",
            "# for both sides."
          ],
          "requirements": [
            44,
            45,
            46,
            47
          ]
        },
        {
          "id": "2.2.4",
          "title": "2.2.4",
          "lines": [
            "# 2.2.4.  Formats",
            "#",
            "# Duvet MUST be able to parse specifications formatted as:",
            "#",
            "# *  markdown",
            "#",
            "# *  ietf"
          ],
          "requirements": [
            48
          ]
        },
        {
          "id": "2.3.3",
          "title": "2.3.3",
          "lines": [
            "# 2.3.3.  Meta: Type",
            "#",
            "# If the meta part is a single line then the type MUST be citation.  If",
            "# a second meta line exists it MUST start with \"type=\".  The type MUST",
            "# be a valid annotation type string:",
            "#",
            "# *  citation",
            "#",
            "# *  test",
            "#",
            "# *  untestable",
            "#",
            "# *  exception",
            "#",
            "# *  implication",
            "#",
            "# *  todo"
          ],
          "requirements": [
            49,
            50,
            51
          ]
        },
        {
          "id": "2.4.1",
          "title": "2.4.1",
          "lines": [
            "# 2.4.1.  Matching annotation and specification requirement",
            "#",
            "# For an annotation to match a specification the annotation's content",
            "# MUST exist in the specification's section identified by the",
            "# annotation's meta location URL.  The match between the annotation",
            "# content and the specification text MUST be case-sensitive but MUST",
            "# NOT be white space sensitive and MUST uniquely identify text in the",
            "# specification.  For simple text in a paragraph this means just",
            "# identifying the annotation's content is a substring of the text in",
            "# the specification's section.  Elements of a list MUST NOT be matched",
            "# by their order within the list.  This means that an annotation may",
            "# contain a list that is a subset of the elements in the specification.",
            "# Rows of a table MUST NOT be matched by their order within the table.",
            "# This means that an annotation MAY contain a table that is a subset of",
            "# the rows in the specification."
          ],
          "requirements": [
            52,
            53,
            54,
            55,
            56
          ]
        },
        {
          "id": "2.5.4",
          "title": "2.5.4",
          "lines": [
            "# 2.5.4.  Unexcused",
            "#",
            "# A specification requirement MUST be labeled \"Unexcused\" and MUST only",
            "# be labeled \"Unexcused\" if there exists a matching annotation of type",
            "# \"exception\" and the annotation does NOT have a \"reason\"."
          ],
          "requirements": [
            57
          ]
        },
        {
          "id": "2.6.1",
          "title": "2.6.1",
          "lines": [
            "# 2.6.1.  Status",
            "#",
            "# Duvet MUST analyze the matching labels for every requirement; the",
            "# result of this analysis is the requirement's Status.  Requirement",
            "# Statuses MUST be exclusive.",
            "#",
            "# The Requirement Statuses MUST be:",
            "#",
            "# *  Complete - The requirement MUST have both the labels \"Implemented\"",
            "#    and \"Attested\"",
            "#",
            "# *  Missing Proof - The requirement MUST only have the label",
            "#    \"Implemented\"",
            "#",
            "# *  Excused - The requirement MUST only have the label \"Excused\"",
            "#",
            "# *  Missing Implementation - The requirement MUST only have the label",
            "#    \"Attested\"",
            "#",
            "# *  Not started - The requirement MUST NOT have any labels",
            "#",
            "# *  Missing Reason - The requirement MUST have the label \"Unexcused\""
          ],
          "requirements": [
            58,
            59,
            60,
            61,
            62,
            63,
            64,
            65,
            66
          ]
        },
        {
          "id": "2.3.2",
          "title": "2.3.2",
          "lines": [
            "# 2.3.2.  Meta: Location",
            "#",
            "# The first line of the meta part identifies the location of the",
            "# content, it MUST be parsed as a URL.  All parts of the URL other than",
            "# a URL fragment MUST be optional and MUST identify the specification",
            "# that contains this section and content.  The URL MUST contain a URL",
            "# fragment that uniquely identifies the section that contains this",
            "# content.  If the URL only contains a URL fragment then this content",
            "# only exists as an annotation.  Such comments are useful to use Duvet",
            "# to manage implementation specific requirements that do not exist in a",
            "# specification.",
            "#",
            "# The Meta: Location's for Annotations targeting specifications written",
            "# in Markdown will NOT be identical to Locations targeting",
            "# specifications written in IETF."
          ],
          "requirements": [
            67,
            68,
            69
          ]
        },
        {
          "id": "2.2.1",
          "title": "2.2.1",
          "lines": [
            "# 2.2.1.  Section",
            "#",
            "# The top level header for requirements is the name of a section.  The",
            "# name of the sections MUST NOT be nested.  A requirements section MUST",
            "# be the top level containing header.  A header MUST NOT itself be a",
            "# requirement.",
            "#",
            "# A section MUST be indexable by combining different levels of naming.",
            "# This means that Duvet needs to be able to locate it uniquely within a",
            "# specification.  A good example of a section is a header in an HTML or",
            "# Markdown document."
          ],
          "requirements": [
            70,
            71,
            72,
            73
          ]
        },
        {
          "id": "2.5.3",
          "title": "2.5.3",
          "lines": [
            "# 2.5.3.  Excused",
            "#",
            "# A specification requirement MUST be labeled \"Excused\" and MUST only",
            "# be labeled \"Excused\" if there exists a matching annotation of type",
            "# \"exception\" and the annotation has a \"reason\"."
          ],
          "requirements": [
            74
          ]
        },
        {
          "id": "2.5.2",
          "title": "2.5.2",
          "lines": [
            "# 2.5.2.  Attested",
            "#",
            "# A specification requirement MUST be labeled \"Attested\" if there",
            "# exists at least one matching annotation of type",
            "#",
            "# *  test",
            "#",
            "# *  untestable",
            "#",
            "# *  implication"
          ],
          "requirements": [
            75
          ]
        },
        {
          "id": "2.3.4",
          "title": "2.3.4",
          "lines": [
            "# 2.3.4.  Meta: Reason",
            "#",
            "# A third meta line MAY exist: Reason.  It MUST start with \"reason=\".",
            "# The rest of this line and the following meta lines MUST be parsed as",
            "# the annotation's reason until there are no more meta lines."
          ],
          "requirements": [
            76,
            77,
            78
          ]
        }
      ]
    }
  },
  "annotations": [
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.5.1",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "A specification requirement MUST be labeled \"Implemented\" if there exists at least one matching annotation of type:"
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.2.3",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "For backwards compatibility Duvet MUST support this older simpler form of requirement identification."
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.2.3",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "Any complete sentence containing at least one RFC 2119 keyword MUST be treated as a requirement."
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.2.3",
      "type": "SPEC",
      "level:": "MAY",
      "comment": "A requirement MAY contain multiple RFC 2119 keywords."
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.2.3",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "A requirement MUST be terminated by one of the following:"
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.2.3",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "For a given a specification Duvet MUST use one way to identify requirements."
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.6.4",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "It MUST have a table summarizing the matrix of requirements across annotation types, and include totals for both sides."
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.6.4",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "It MUST show a table with a row for each requirement."
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.6.4",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "The table MUST have a column for:"
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.5",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "Duvet MUST analyze the matching annotations, generating Matching Labels."
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.5",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "Duvet MUST label requirements matched to annotations as follows:"
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.5",
      "type": "SPEC",
      "level:": "MAY",
      "comment": "Matching Labels MAY be exclusive."
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.3.6",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "A one or more line meta part MUST be followed by at least a one line content part."
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.3.6",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "The default identifier for the content part in software documents MUST be \"//#\" followed by a single space."
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.3.6",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "This identifier of content parts MUST be configurable."
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.3.6",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "All content part lines MUST be consecutive."
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.6.5",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "It MUST show all text from the section."
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.6.5",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "It MUST highlight the text for every requirement."
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.6.5",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "It MUST highlight the text that matches any annotation."
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.6.5",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "Any highlighted text MUST have a mouse over that shows its annotation information."
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.6.5",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "Clicking on any highlighted text MUST bring up a popup that shows:"
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.6.5",
      "type": "SPEC",
      "level:": "SHOULD",
      "comment": "This link SHOULD include the line number."
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.6.5",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "Selecting any text of the specification and right-clicking on it MUST bring up a popup for the selected text that shows:"
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.6.5",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "It MUST show a table with a row for each requirement included in this section."
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.6.5",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "The table MUST have a column for:"
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.2.2",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "Any complete sentence containing at least one RFC 2119 keyword MUST be treated as a requirement."
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.2.2",
      "type": "SPEC",
      "level:": "MAY",
      "comment": "A requirement MAY contain multiple RFC 2119 keywords."
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.2.2",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "A requirement MUST be terminated by one of the following:"
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.2.2",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "In the case of requirement terminated by a list, the text proceeding the list MUST be concatenated with each element of the list to form a requirement."
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.2.2",
      "type": "SPEC",
      "level:": "MAY",
      "comment": "List elements MAY have RFC 2119 keywords, this is the same as regular sentences with multiple keywords."
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.2.2",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "Sublists MUST be treated as if the parent item were terminated by the sublist."
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.2.2",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "List elements MAY contain a period (.) or exclamation point (!) and this punctuation MUST NOT terminate the requirement by excluding the following elements from the list of requirements."
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.2.2",
      "type": "SPEC",
      "level:": "SHOULD",
      "comment": "In the case of requirement terminated by a table, the text proceeding the table SHOULD be concatenated with each row of the table to form a requirement."
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.2.2",
      "type": "SPEC",
      "level:": "MAY",
      "comment": "Table cells MAY have RFC 2119 keywords, this is the same as regular sentences with multiple keywords."
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.2.2",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "Table cells MAY contain a period (.) or exclamation point (!) and this punctuation MUST NOT terminate the requirement by excluding the following rows from the table of requirements."
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.2.4.1",
      "type": "SPEC",
      "level:": "SHOULD",
      "comment": "Duvet SHOULD be able to parse requirements formatted as Toml files."
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.2.4.1",
      "type": "SPEC",
      "level:": "SHOULD",
      "comment": "Duvet SHOULD be able to record parsed requirements into Toml Files."
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.6.2",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "For Duvet to pass the Status of every \"MUST\" and \"MUST NOT\" requirement MUST be Complete or Excused."
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.6.2",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "Duvet MUST return \"0\" for Pass."
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.6.2",
      "type": "SPEC",
      "level:": "SHOULD",
      "comment": "Duvet SHOULD print a success message."
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.6.2",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "Duvet MUST NOT return \"0\" for Fail."
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.6.2",
      "type": "SPEC",
      "level:": "SHOULD",
      "comment": "Duvet SHOULD print a failure message."
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.3.1",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "The default identifier for the meta part in source documents MUST be //= followed by a single space."
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.3.1",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "This identifier of meta parts MUST be configurable."
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.6.3",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "It MUST have all a link for each included specifications."
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.6.3",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "It MUST have all a link for annotations that do not match any included specifications."
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.6.3",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "It MUST have all a link for annotations not associated with any specifications."
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.6.3",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "For each link it MUST have a table summarizing the matrix of requirements crossed annotation types, and include totals for both sides."
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.2.4",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "Duvet MUST be able to parse specifications formatted as:"
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.3.3",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "If the meta part is a single line then the type MUST be citation."
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.3.3",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "If a second meta line exists it MUST start with \"type=\"."
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.3.3",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "The type MUST be a valid annotation type string:"
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.4.1",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "For an annotation to match a specification the annotation's content MUST exist in the specification's section identified by the annotation's meta location URL."
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.4.1",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "The match between the annotation content and the specification text MUST be case-sensitive but MUST NOT be white space sensitive and MUST uniquely identify text in the specification."
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.4.1",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "Elements of a list MUST NOT be matched by their order within the list."
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.4.1",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "Rows of a table MUST NOT be matched by their order within the table."
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.4.1",
      "type": "SPEC",
      "level:": "MAY",
      "comment": "This means that an annotation MAY contain a table that is a subset of the rows in the specification."
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.5.4",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "A specification requirement MUST be labeled \"Unexcused\" and MUST only be labeled \"Unexcused\" if there exists a matching annotation of type \"exception\" and the annotation does NOT have a \"reason\"."
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.6.1",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "Duvet MUST analyze the matching labels for every requirement; the result of this analysis is the requirement's Status."
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.6.1",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "Requirement Statuses MUST be exclusive."
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.6.1",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "The Requirement Statuses MUST be:"
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.6.1",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "*  Complete - The requirement MUST have both the labels \"Implemented\" and \"Attested\""
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.6.1",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "*  Missing Proof - The requirement MUST only have the label \"Implemented\""
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.6.1",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "*  Excused - The requirement MUST only have the label \"Excused\""
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.6.1",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "*  Missing Implementation - The requirement MUST only have the label \"Attested\""
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.6.1",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "*  Not started - The requirement MUST NOT have any labels"
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.6.1",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "*  Missing Reason - The requirement MUST have the label \"Unexcused\""
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.3.2",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "The first line of the meta part identifies the location of the content, it MUST be parsed as a URL."
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.3.2",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "All parts of the URL other than a URL fragment MUST be optional and MUST identify the specification that contains this section and content."
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.3.2",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "The URL MUST contain a URL fragment that uniquely identifies the section that contains this content."
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.2.1",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "The name of the sections MUST NOT be nested."
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.2.1",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "A requirements section MUST be the top level containing header."
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.2.1",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "A header MUST NOT itself be a requirement."
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.2.1",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "A section MUST be indexable by combining different levels of naming."
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.5.3",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "A specification requirement MUST be labeled \"Excused\" and MUST only be labeled \"Excused\" if there exists a matching annotation of type \"exception\" and the annotation has a \"reason\"."
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.5.2",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "A specification requirement MUST be labeled \"Attested\" if there exists at least one matching annotation of type"
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.3.4",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "It MUST start with \"reason=\"."
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.3.4",
      "type": "SPEC",
      "level:": "MAY",
      "comment": "A third meta line MAY exist: Reason."
    },
    {
      "source": "compliance/duvet-specification.txt",
      "target_path": "compliance/duvet-specification.txt",
      "target_section": "2.3.4",
      "type": "SPEC",
      "level:": "MUST",
      "comment": "The rest of this line and the following meta lines MUST be parsed as the annotation's reason until there are no more meta lines."
    }
  ],
  "statuses": {},
  "refs": [
    {},
    {
      "todo": true
    },
    {
      "exception": true
    },
    {
      "exception": true,
      "todo": true
    },
    {
      "test": true
    },
    {
      "test": true,
      "todo": true
    },
    {
      "test": true,
      "exception": true
    },
    {
      "test": true,
      "exception": true,
      "todo": true
    },
    {
      "implication": true
    },
    {
      "implication": true,
      "todo": true
    },
    {
      "implication": true,
      "exception": true
    },
    {
      "implication": true,
      "exception": true,
      "todo": true
    },
    {
      "implication": true,
      "test": true
    },
    {
      "implication": true,
      "test": true,
      "todo": true
    },
    {
      "implication": true,
      "test": true,
      "exception": true
    },
    {
      "implication": true,
      "test": true,
      "exception": true,
      "todo": true
    },
    {
      "citation": true
    },
    {
      "citation": true,
      "todo": true
    },
    {
      "citation": true,
      "exception": true
    },
    {
      "citation": true,
      "exception": true,
      "todo": true
    },
    {
      "citation": true,
      "test": true
    },
    {
      "citation": true,
      "test": true,
      "todo": true
    },
    {
      "citation": true,
      "test": true,
      "exception": true
    },
    {
      "citation": true,
      "test": true,
      "exception": true,
      "todo": true
    },
    {
      "citation": true,
      "implication": true
    },
    {
      "citation": true,
      "implication": true,
      "todo": true
    },
    {
      "citation": true,
      "implication": true,
      "exception": true
    },
    {
      "citation": true,
      "implication": true,
      "exception": true,
      "todo": true
    },
    {
      "citation": true,
      "implication": true,
      "test": true
    },
    {
      "citation": true,
      "implication": true,
      "test": true,
      "todo": true
    },
    {
      "citation": true,
      "implication": true,
      "test": true,
      "exception": true
    },
    {
      "citation": true,
      "implication": true,
      "test": true,
      "exception": true,
      "todo": true
    },
    {
      "spec": true
    },
    {
      "spec": true,
      "todo": true
    },
    {
      "spec": true,
      "exception": true
    },
    {
      "spec": true,
      "exception": true,
      "todo": true
    },
    {
      "spec": true,
      "test": true
    },
    {
      "spec": true,
      "test": true,
      "todo": true
    },
    {
      "spec": true,
      "test": true,
      "exception": true
    },
    {
      "spec": true,
      "test": true,
      "exception": true,
      "todo": true
    },
    {
      "spec": true,
      "implication": true
    },
    {
      "spec": true,
      "implication": true,
      "todo": true
    },
    {
      "spec": true,
      "implication": true,
      "exception": true
    },
    {
      "spec": true,
      "implication": true,
      "exception": true,
      "todo": true
    },
    {
      "spec": true,
      "implication": true,
      "test": true
    },
    {
      "spec": true,
      "implication": true,
      "test": true,
      "todo": true
    },
    {
      "spec": true,
      "implication": true,
      "test": true,
      "exception": true
    },
    {
      "spec": true,
      "implication": true,
      "test": true,
      "exception": true,
      "todo": true
    },
    {
      "spec": true,
      "citation": true
    },
    {
      "spec": true,
      "citation": true,
      "todo": true
    },
    {
      "spec": true,
      "citation": true,
      "exception": true
    },
    {
      "spec": true,
      "citation": true,
      "exception": true,
      "todo": true
    },
    {
      "spec": true,
      "citation": true,
      "test": true
    },
    {
      "spec": true,
      "citation": true,
      "test": true,
      "todo": true
    },
    {
      "spec": true,
      "citation": true,
      "test": true,
      "exception": true
    },
    {
      "spec": true,
      "citation": true,
      "test": true,
      "exception": true,
      "todo": true
    },
    {
      "spec": true,
      "citation": true,
      "implication": true
    },
    {
      "spec": true,
      "citation": true,
      "implication": true,
      "todo": true
    },
    {
      "spec": true,
      "citation": true,
      "implication": true,
      "exception": true
    },
    {
      "spec": true,
      "citation": true,
      "implication": true,
      "exception": true,
      "todo": true
    },
    {
      "spec": true,
      "citation": true,
      "implication": true,
      "test": true
    },
    {
      "spec": true,
      "citation": true,
      "implication": true,
      "test": true,
      "todo": true
    },
    {
      "spec": true,
      "citation": true,
      "implication": true,
      "test": true,
      "exception": true
    },
    {
      "spec": true,
      "citation": true,
      "implication": true,
      "test": true,
      "exception": true,
      "todo": true
    },
    {
      "level": "MAY"
    },
    {
      "todo": true,
      "level": "MAY"
    },
    {
      "exception": true,
      "level": "MAY"
    },
    {
      "exception": true,
      "todo": true,
      "level": "MAY"
    },
    {
      "test": true,
      "level": "MAY"
    },
    {
      "test": true,
      "todo": true,
      "level": "MAY"
    },
    {
      "test": true,
      "exception": true,
      "level": "MAY"
    },
    {
      "test": true,
      "exception": true,
      "todo": true,
      "level": "MAY"
    },
    {
      "implication": true,
      "level": "MAY"
    },
    {
      "implication": true,
      "todo": true,
      "level": "MAY"
    },
    {
      "implication": true,
      "exception": true,
      "level": "MAY"
    },
    {
      "implication": true,
      "exception": true,
      "todo": true,
      "level": "MAY"
    },
    {
      "implication": true,
      "test": true,
      "level": "MAY"
    },
    {
      "implication": true,
      "test": true,
      "todo": true,
      "level": "MAY"
    },
    {
      "implication": true,
      "test": true,
      "exception": true,
      "level": "MAY"
    },
    {
      "implication": true,
      "test": true,
      "exception": true,
      "todo": true,
      "level": "MAY"
    },
    {
      "citation": true,
      "level": "MAY"
    },
    {
      "citation": true,
      "todo": true,
      "level": "MAY"
    },
    {
      "citation": true,
      "exception": true,
      "level": "MAY"
    },
    {
      "citation": true,
      "exception": true,
      "todo": true,
      "level": "MAY"
    },
    {
      "citation": true,
      "test": true,
      "level": "MAY"
    },
    {
      "citation": true,
      "test": true,
      "todo": true,
      "level": "MAY"
    },
    {
      "citation": true,
      "test": true,
      "exception": true,
      "level": "MAY"
    },
    {
      "citation": true,
      "test": true,
      "exception": true,
      "todo": true,
      "level": "MAY"
    },
    {
      "citation": true,
      "implication": true,
      "level": "MAY"
    },
    {
      "citation": true,
      "implication": true,
      "todo": true,
      "level": "MAY"
    },
    {
      "citation": true,
      "implication": true,
      "exception": true,
      "level": "MAY"
    },
    {
      "citation": true,
      "implication": true,
      "exception": true,
      "todo": true,
      "level": "MAY"
    },
    {
      "citation": true,
      "implication": true,
      "test": true,
      "level": "MAY"
    },
    {
      "citation": true,
      "implication": true,
      "test": true,
      "todo": true,
      "level": "MAY"
    },
    {
      "citation": true,
      "implication": true,
      "test": true,
      "exception": true,
      "level": "MAY"
    },
    {
      "citation": true,
      "implication": true,
      "test": true,
      "exception": true,
      "todo": true,
      "level": "MAY"
    },
    {
      "spec": true,
      "level": "MAY"
    },
    {
      "spec": true,
      "todo": true,
      "level": "MAY"
    },
    {
      "spec": true,
      "exception": true,
      "level": "MAY"
    },
    {
      "spec": true,
      "exception": true,
      "todo": true,
      "level": "MAY"
    },
    {
      "spec": true,
      "test": true,
      "level": "MAY"
    },
    {
      "spec": true,
      "test": true,
      "todo": true,
      "level": "MAY"
    },
    {
      "spec": true,
      "test": true,
      "exception": true,
      "level": "MAY"
    },
    {
      "spec": true,
      "test": true,
      "exception": true,
      "todo": true,
      "level": "MAY"
    },
    {
      "spec": true,
      "implication": true,
      "level": "MAY"
    },
    {
      "spec": true,
      "implication": true,
      "todo": true,
      "level": "MAY"
    },
    {
      "spec": true,
      "implication": true,
      "exception": true,
      "level": "MAY"
    },
    {
      "spec": true,
      "implication": true,
      "exception": true,
      "todo": true,
      "level": "MAY"
    },
    {
      "spec": true,
      "implication": true,
      "test": true,
      "level": "MAY"
    },
    {
      "spec": true,
      "implication": true,
      "test": true,
      "todo": true,
      "level": "MAY"
    },
    {
      "spec": true,
      "implication": true,
      "test": true,
      "exception": true,
      "level": "MAY"
    },
    {
      "spec": true,
      "implication": true,
      "test": true,
      "exception": true,
      "todo": true,
      "level": "MAY"
    },
    {
      "spec": true,
      "citation": true,
      "level": "MAY"
    },
    {
      "spec": true,
      "citation": true,
      "todo": true,
      "level": "MAY"
    },
    {
      "spec": true,
      "citation": true,
      "exception": true,
      "level": "MAY"
    },
    {
      "spec": true,
      "citation": true,
      "exception": true,
      "todo": true,
      "level": "MAY"
    },
    {
      "spec": true,
      "citation": true,
      "test": true,
      "level": "MAY"
    },
    {
      "spec": true,
      "citation": true,
      "test": true,
      "todo": true,
      "level": "MAY"
    },
    {
      "spec": true,
      "citation": true,
      "test": true,
      "exception": true,
      "level": "MAY"
    },
    {
      "spec": true,
      "citation": true,
      "test": true,
      "exception": true,
      "todo": true,
      "level": "MAY"
    },
    {
      "spec": true,
      "citation": true,
      "implication": true,
      "level": "MAY"
    },
    {
      "spec": true,
      "citation": true,
      "implication": true,
      "todo": true,
      "level": "MAY"
    },
    {
      "spec": true,
      "citation": true,
      "implication": true,
      "exception": true,
      "level": "MAY"
    },
    {
      "spec": true,
      "citation": true,
      "implication": true,
      "exception": true,
      "todo": true,
      "level": "MAY"
    },
    {
      "spec": true,
      "citation": true,
      "implication": true,
      "test": true,
      "level": "MAY"
    },
    {
      "spec": true,
      "citation": true,
      "implication": true,
      "test": true,
      "todo": true,
      "level": "MAY"
    },
    {
      "spec": true,
      "citation": true,
      "implication": true,
      "test": true,
      "exception": true,
      "level": "MAY"
    },
    {
      "spec": true,
      "citation": true,
      "implication": true,
      "test": true,
      "exception": true,
      "todo": true,
      "level": "MAY"
    },
    {
      "level": "SHOULD"
    },
    {
      "todo": true,
      "level": "SHOULD"
    },
    {
      "exception": true,
      "level": "SHOULD"
    },
    {
      "exception": true,
      "todo": true,
      "level": "SHOULD"
    },
    {
      "test": true,
      "level": "SHOULD"
    },
    {
      "test": true,
      "todo": true,
      "level": "SHOULD"
    },
    {
      "test": true,
      "exception": true,
      "level": "SHOULD"
    },
    {
      "test": true,
      "exception": true,
      "todo": true,
      "level": "SHOULD"
    },
    {
      "implication": true,
      "level": "SHOULD"
    },
    {
      "implication": true,
      "todo": true,
      "level": "SHOULD"
    },
    {
      "implication": true,
      "exception": true,
      "level": "SHOULD"
    },
    {
      "implication": true,
      "exception": true,
      "todo": true,
      "level": "SHOULD"
    },
    {
      "implication": true,
      "test": true,
      "level": "SHOULD"
    },
    {
      "implication": true,
      "test": true,
      "todo": true,
      "level": "SHOULD"
    },
    {
      "implication": true,
      "test": true,
      "exception": true,
      "level": "SHOULD"
    },
    {
      "implication": true,
      "test": true,
      "exception": true,
      "todo": true,
      "level": "SHOULD"
    },
    {
      "citation": true,
      "level": "SHOULD"
    },
    {
      "citation": true,
      "todo": true,
      "level": "SHOULD"
    },
    {
      "citation": true,
      "exception": true,
      "level": "SHOULD"
    },
    {
      "citation": true,
      "exception": true,
      "todo": true,
      "level": "SHOULD"
    },
    {
      "citation": true,
      "test": true,
      "level": "SHOULD"
    },
    {
      "citation": true,
      "test": true,
      "todo": true,
      "level": "SHOULD"
    },
    {
      "citation": true,
      "test": true,
      "exception": true,
      "level": "SHOULD"
    },
    {
      "citation": true,
      "test": true,
      "exception": true,
      "todo": true,
      "level": "SHOULD"
    },
    {
      "citation": true,
      "implication": true,
      "level": "SHOULD"
    },
    {
      "citation": true,
      "implication": true,
      "todo": true,
      "level": "SHOULD"
    },
    {
      "citation": true,
      "implication": true,
      "exception": true,
      "level": "SHOULD"
    },
    {
      "citation": true,
      "implication": true,
      "exception": true,
      "todo": true,
      "level": "SHOULD"
    },
    {
      "citation": true,
      "implication": true,
      "test": true,
      "level": "SHOULD"
    },
    {
      "citation": true,
      "implication": true,
      "test": true,
      "todo": true,
      "level": "SHOULD"
    },
    {
      "citation": true,
      "implication": true,
      "test": true,
      "exception": true,
      "level": "SHOULD"
    },
    {
      "citation": true,
      "implication": true,
      "test": true,
      "exception": true,
      "todo": true,
      "level": "SHOULD"
    },
    {
      "spec": true,
      "level": "SHOULD"
    },
    {
      "spec": true,
      "todo": true,
      "level": "SHOULD"
    },
    {
      "spec": true,
      "exception": true,
      "level": "SHOULD"
    },
    {
      "spec": true,
      "exception": true,
      "todo": true,
      "level": "SHOULD"
    },
    {
      "spec": true,
      "test": true,
      "level": "SHOULD"
    },
    {
      "spec": true,
      "test": true,
      "todo": true,
      "level": "SHOULD"
    },
    {
      "spec": true,
      "test": true,
      "exception": true,
      "level": "SHOULD"
    },
    {
      "spec": true,
      "test": true,
      "exception": true,
      "todo": true,
      "level": "SHOULD"
    },
    {
      "spec": true,
      "implication": true,
      "level": "SHOULD"
    },
    {
      "spec": true,
      "implication": true,
      "todo": true,
      "level": "SHOULD"
    },
    {
      "spec": true,
      "implication": true,
      "exception": true,
      "level": "SHOULD"
    },
    {
      "spec": true,
      "implication": true,
      "exception": true,
      "todo": true,
      "level": "SHOULD"
    },
    {
      "spec": true,
      "implication": true,
      "test": true,
      "level": "SHOULD"
    },
    {
      "spec": true,
      "implication": true,
      "test": true,
      "todo": true,
      "level": "SHOULD"
    },
    {
      "spec": true,
      "implication": true,
      "test": true,
      "exception": true,
      "level": "SHOULD"
    },
    {
      "spec": true,
      "implication": true,
      "test": true,
      "exception": true,
      "todo": true,
      "level": "SHOULD"
    },
    {
      "spec": true,
      "citation": true,
      "level": "SHOULD"
    },
    {
      "spec": true,
      "citation": true,
      "todo": true,
      "level": "SHOULD"
    },
    {
      "spec": true,
      "citation": true,
      "exception": true,
      "level": "SHOULD"
    },
    {
      "spec": true,
      "citation": true,
      "exception": true,
      "todo": true,
      "level": "SHOULD"
    },
    {
      "spec": true,
      "citation": true,
      "test": true,
      "level": "SHOULD"
    },
    {
      "spec": true,
      "citation": true,
      "test": true,
      "todo": true,
      "level": "SHOULD"
    },
    {
      "spec": true,
      "citation": true,
      "test": true,
      "exception": true,
      "level": "SHOULD"
    },
    {
      "spec": true,
      "citation": true,
      "test": true,
      "exception": true,
      "todo": true,
      "level": "SHOULD"
    },
    {
      "spec": true,
      "citation": true,
      "implication": true,
      "level": "SHOULD"
    },
    {
      "spec": true,
      "citation": true,
      "implication": true,
      "todo": true,
      "level": "SHOULD"
    },
    {
      "spec": true,
      "citation": true,
      "implication": true,
      "exception": true,
      "level": "SHOULD"
    },
    {
      "spec": true,
      "citation": true,
      "implication": true,
      "exception": true,
      "todo": true,
      "level": "SHOULD"
    },
    {
      "spec": true,
      "citation": true,
      "implication": true,
      "test": true,
      "level": "SHOULD"
    },
    {
      "spec": true,
      "citation": true,
      "implication": true,
      "test": true,
      "todo": true,
      "level": "SHOULD"
    },
    {
      "spec": true,
      "citation": true,
      "implication": true,
      "test": true,
      "exception": true,
      "level": "SHOULD"
    },
    {
      "spec": true,
      "citation": true,
      "implication": true,
      "test": true,
      "exception": true,
      "todo": true,
      "level": "SHOULD"
    },
    {
      "level": "MUST"
    },
    {
      "todo": true,
      "level": "MUST"
    },
    {
      "exception": true,
      "level": "MUST"
    },
    {
      "exception": true,
      "todo": true,
      "level": "MUST"
    },
    {
      "test": true,
      "level": "MUST"
    },
    {
      "test": true,
      "todo": true,
      "level": "MUST"
    },
    {
      "test": true,
      "exception": true,
      "level": "MUST"
    },
    {
      "test": true,
      "exception": true,
      "todo": true,
      "level": "MUST"
    },
    {
      "implication": true,
      "level": "MUST"
    },
    {
      "implication": true,
      "todo": true,
      "level": "MUST"
    },
    {
      "implication": true,
      "exception": true,
      "level": "MUST"
    },
    {
      "implication": true,
      "exception": true,
      "todo": true,
      "level": "MUST"
    },
    {
      "implication": true,
      "test": true,
      "level": "MUST"
    },
    {
      "implication": true,
      "test": true,
      "todo": true,
      "level": "MUST"
    },
    {
      "implication": true,
      "test": true,
      "exception": true,
      "level": "MUST"
    },
    {
      "implication": true,
      "test": true,
      "exception": true,
      "todo": true,
      "level": "MUST"
    },
    {
      "citation": true,
      "level": "MUST"
    },
    {
      "citation": true,
      "todo": true,
      "level": "MUST"
    },
    {
      "citation": true,
      "exception": true,
      "level": "MUST"
    },
    {
      "citation": true,
      "exception": true,
      "todo": true,
      "level": "MUST"
    },
    {
      "citation": true,
      "test": true,
      "level": "MUST"
    },
    {
      "citation": true,
      "test": true,
      "todo": true,
      "level": "MUST"
    },
    {
      "citation": true,
      "test": true,
      "exception": true,
      "level": "MUST"
    },
    {
      "citation": true,
      "test": true,
      "exception": true,
      "todo": true,
      "level": "MUST"
    },
    {
      "citation": true,
      "implication": true,
      "level": "MUST"
    },
    {
      "citation": true,
      "implication": true,
      "todo": true,
      "level": "MUST"
    },
    {
      "citation": true,
      "implication": true,
      "exception": true,
      "level": "MUST"
    },
    {
      "citation": true,
      "implication": true,
      "exception": true,
      "todo": true,
      "level": "MUST"
    },
    {
      "citation": true,
      "implication": true,
      "test": true,
      "level": "MUST"
    },
    {
      "citation": true,
      "implication": true,
      "test": true,
      "todo": true,
      "level": "MUST"
    },
    {
      "citation": true,
      "implication": true,
      "test": true,
      "exception": true,
      "level": "MUST"
    },
    {
      "citation": true,
      "implication": true,
      "test": true,
      "exception": true,
      "todo": true,
      "level": "MUST"
    },
    {
      "spec": true,
      "level": "MUST"
    },
    {
      "spec": true,
      "todo": true,
      "level": "MUST"
    },
    {
      "spec": true,
      "exception": true,
      "level": "MUST"
    },
    {
      "spec": true,
      "exception": true,
      "todo": true,
      "level": "MUST"
    },
    {
      "spec": true,
      "test": true,
      "level": "MUST"
    },
    {
      "spec": true,
      "test": true,
      "todo": true,
      "level": "MUST"
    },
    {
      "spec": true,
      "test": true,
      "exception": true,
      "level": "MUST"
    },
    {
      "spec": true,
      "test": true,
      "exception": true,
      "todo": true,
      "level": "MUST"
    },
    {
      "spec": true,
      "implication": true,
      "level": "MUST"
    },
    {
      "spec": true,
      "implication": true,
      "todo": true,
      "level": "MUST"
    },
    {
      "spec": true,
      "implication": true,
      "exception": true,
      "level": "MUST"
    },
    {
      "spec": true,
      "implication": true,
      "exception": true,
      "todo": true,
      "level": "MUST"
    },
    {
      "spec": true,
      "implication": true,
      "test": true,
      "level": "MUST"
    },
    {
      "spec": true,
      "implication": true,
      "test": true,
      "todo": true,
      "level": "MUST"
    },
    {
      "spec": true,
      "implication": true,
      "test": true,
      "exception": true,
      "level": "MUST"
    },
    {
      "spec": true,
      "implication": true,
      "test": true,
      "exception": true,
      "todo": true,
      "level": "MUST"
    },
    {
      "spec": true,
      "citation": true,
      "level": "MUST"
    },
    {
      "spec": true,
      "citation": true,
      "todo": true,
      "level": "MUST"
    },
    {
      "spec": true,
      "citation": true,
      "exception": true,
      "level": "MUST"
    },
    {
      "spec": true,
      "citation": true,
      "exception": true,
      "todo": true,
      "level": "MUST"
    },
    {
      "spec": true,
      "citation": true,
      "test": true,
      "level": "MUST"
    },
    {
      "spec": true,
      "citation": true,
      "test": true,
      "todo": true,
      "level": "MUST"
    },
    {
      "spec": true,
      "citation": true,
      "test": true,
      "exception": true,
      "level": "MUST"
    },
    {
      "spec": true,
      "citation": true,
      "test": true,
      "exception": true,
      "todo": true,
      "level": "MUST"
    },
    {
      "spec": true,
      "citation": true,
      "implication": true,
      "level": "MUST"
    },
    {
      "spec": true,
      "citation": true,
      "implication": true,
      "todo": true,
      "level": "MUST"
    },
    {
      "spec": true,
      "citation": true,
      "implication": true,
      "exception": true,
      "level": "MUST"
    },
    {
      "spec": true,
      "citation": true,
      "implication": true,
      "exception": true,
      "todo": true,
      "level": "MUST"
    },
    {
      "spec": true,
      "citation": true,
      "implication": true,
      "test": true,
      "level": "MUST"
    },
    {
      "spec": true,
      "citation": true,
      "implication": true,
      "test": true,
      "todo": true,
      "level": "MUST"
    },
    {
      "spec": true,
      "citation": true,
      "implication": true,
      "test": true,
      "exception": true,
      "level": "MUST"
    },
    {
      "spec": true,
      "citation": true,
      "implication": true,
      "test": true,
      "exception": true,
      "todo": true,
      "level": "MUST"
    }
  ]
}