{"blob_link": "https://github.com/awslabs/duvet/tree/sprint-demo/", "issue_link": "https://github.com/awslabs/duvet/issues", "specifications": {"compliance/duvet-specification.txt": {"requirements": [4, 8, 12, 16, 18, 20, 27, 31, 35, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 71, 74, 77, 80, 83, 86, 89, 91, 94, 96, 100, 102, 104, 106, 108, 110, 112, 114, 116, 119, 122, 125, 128, 130, 132, 135, 137, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178], "sections": [{"id": "1", "title": "Definitions", "lines": ["1.   Conventions and Definitions", "", "   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",", "   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and", "   \"OPTIONAL\" in this document are to be interpreted as described in BCP", "   14 [RFC2119] [RFC8174] when, and only when, they appear in all", "   capitals, as shown here", ""]}, {"id": "2", "title": "specification", "lines": ["2.   Duvet specification", ""]}, {"id": "2.1", "title": "Introduction", "lines": ["2.1.   Introduction", "", "   Duvet is an application to build confidence that your software is", "   correct.  The first step in correct software is to document what", "   correct behavior is.  This document is called a specification.  A", "   specification can be a design document or an RFC.  This specification", "   document describes an application's behaviors.  What steps are", "   important, in what order and why.  Duvet lets you annotate your code", "   with text from your specification.  This helps clarify what a", "   specific implementation should be doing and why.  Any part of the", "   specification can be an annotation.  However, Duvet treats RFC 2119", "   keywords in your specification as requirement key-words that must be", "   annotated.", "", "   Duvet reads files you designate as specifications and files you", "   designate as part of your software.  It matches the annotations in", "   your software to your specification.  Duvet will then report on these", "   matches.  Are there annotations in your source that do not exist in", "   your specification?  Does every cited requirement from your", "   specification have a test?  This report can either be a pass/fail for", "   CI or an interactive report for development and code review.", ""]}, {"id": "2.2", "title": "Specification", "lines": ["2.2.   Specification", "", "   A specification is a document, like this, that defines correct", "   behavior.  This behavior is defined in regular human language.", ""]}, {"id": "2.2.1", "title": "Section", "lines": [[[[0, 1, 2, 3, 4], 248, "The name of the sections MUST NOT be nested."]], [[[5, 6, 7, 8], 226, "A requirements section MUST be the top level containing header."]], [[[9, 10, 11, 12], 232, "A header MUST NOT itself be a requirement."]], [[[13, 14, 15, 16], 225, "A section MUST be indexable by combining different levels of naming."]]], "requirements": [4, 8, 12, 16]}, {"id": "2.2.2", "title": "Requirement", "lines": [[[[17, 18], 232, "Any complete sentence containing at least one RFC 2119 keyword MUST be treated as a requirement."]], [[[19, 20], 104, "A requirement MAY contain multiple RFC 2119 keywords."]], [[[21, 22, 23, 24, 25, 26, 27], 248, "A requirement MUST be terminated by one of the following:"]], [[[28, 29, 30, 31], 232, "In the case of requirement terminated by a list, the text proceeding the list MUST be concatenated with each element of the list to form a requirement."]], [[[32, 33, 34, 35], 104, "List elements MAY have RFC 2119 keywords, this is the same as regular sentences with multiple keywords."]], [[[36, 37, 38, 39, 40, 41, 42], 225, "Sublists MUST be treated as if the parent item were terminated by the sublist."]], [[[43, 44], 240, "List elements MAY contain a period (.) or exclamation point (!) and this punctuation MUST NOT terminate the requirement by excluding the following elements from the list of requirements."]], [[[45, 46], 162, "In the case of requirement terminated by a table, the text proceeding the table SHOULD be concatenated with each row of the table to form a requirement."]], [[[47, 48], 98, "Table cells MAY have RFC 2119 keywords, this is the same as regular sentences with multiple keywords."]], [[[49, 50], 226, "Table cells MAY contain a period (.) or exclamation point (!) and this punctuation MUST NOT terminate the requirement by excluding the following rows from the table of requirements."]]], "requirements": [18, 20, 27, 31, 35, 42, 44, 46, 48, 50]}, {"id": "2.2.3", "title": "Requirement", "lines": [[[[51, 52], 232, "For backwards compatibility Duvet MUST support this older simpler form of requirement identification."]], [[[53, 54], 232, "Any complete sentence containing at least one RFC 2119 keyword MUST be treated as a requirement."]], [[[55, 56], 104, "A requirement MAY contain multiple RFC 2119 keywords."]], [[[57, 58], 232, "A requirement MUST be terminated by one of the following:"]], [[[59, 60], 232, "For a given a specification Duvet MUST use one way to identify requirements."]]], "requirements": [52, 54, 56, 58, 60]}, {"id": "2.2.4", "title": "Formats", "lines": [[[[61, 62], 225, "Duvet MUST be able to parse specifications formatted as:"]]], "requirements": [62]}, {"id": "2.2.4.1", "title": "Toml", "lines": [[[[63, 64], 164, "Duvet SHOULD be able to parse requirements formatted as Toml files."]], [[[65, 66], 161, "Duvet SHOULD be able to record parsed requirements into Toml Files."]]], "requirements": [64, 66]}, {"id": "2.3", "title": "Annotation", "lines": ["2.3.   Annotation", "", "   Annotations are references to a text from a section in a", "   specification, written as comment in the source code and test code.", "   Annotations are generally stored as formatted comments in source", "   within a project.", ""]}, {"id": "2.3.1", "title": "Meta", "lines": [[[[67, 68], 232, "The default identifier for the meta part in source documents MUST be //= followed by a single space."]], [[[69, 70, 71], 232, "This identifier of meta parts MUST be configurable."]]], "requirements": [68, 71]}, {"id": "2.3.2", "title": "Location", "lines": [[[[72, 73, 74], 244, "The first line of the meta part identifies the location of the content, it MUST be parsed as a URL."]], [[[75, 76, 77], 244, "All parts of the URL other than a URL fragment MUST be optional and MUST identify the specification that contains this section and content."]], [[[78, 79, 80], 244, "The URL MUST contain a URL fragment that uniquely identifies the section that contains this content."]]], "requirements": [74, 77, 80]}, {"id": "2.3.3", "title": "Type", "lines": [[[[81, 82, 83], 244, "If the meta part is a single line then the type MUST be citation."]], [[[84, 85, 86], 244, "If a second meta line exists it MUST start with \"type=\"."]], [[[87, 88, 89], 244, "The type MUST be a valid annotation type string:"]]], "requirements": [83, 86, 89]}, {"id": "2.3.4", "title": "Reason", "lines": [[[[90, 91], 104, "A third meta line MAY exist: Reason."]], [[[92, 93, 94], 244, "It MUST start with \"reason=\"."]], [[[95, 96], 232, "The rest of this line and the following meta lines MUST be parsed as the annotation's reason until there are no more meta lines."]]], "requirements": [91, 94, 96]}, {"id": "2.3.5", "title": "Types", "lines": ["2.3.5.   Annotation Types", "", "   Annotation types give meaning to the way the thing being annotated", "   relate to the content.  Each type is listed here with its intended", "   usage.", "", "   *  Citation: The implementation of what is described in the content.", "", "   *  Test: A test or test vector that verifies that an implementation", "      honors what is described in the content.  These tests are ideally", "      negative. i.e. Counter examples to the description are attempted", "      and fail.", "", "   *  Untestable: The implementation that can not be tested.  Some", "      runtimes, languages, or constructions make the idea described in", "      the content untestable.  Additional protections against random bit", "      flips is a good example.", "", "   *  Deviation: An implementation that differs from what is described", "      in the content.  The implementation may have proceeded the", "      specification for example.", "", "   *  Exception: A part of a specification that is not implemented.", "      This can include optional or legacy features.  Exceptions have an", "      optional reason field.", "", "   *  Implication: A construction that is correct by construction i.e.", "      it can not fail.  For example take a requirement that a function", "      take a specific set of arguments.  In a static strongly typed", "      language the arguments of a function can not change.  So an", "      implication could be a good choice to express that the", "      implementation satisfies this requirement.", "", "   *  Todo: The suggested location for the implementation.", ""]}, {"id": "2.3.6", "title": "Content", "lines": [[[[97, 98, 99, 100], 232, "A one or more line meta part MUST be followed by at least a one line content part."]], [[[101, 102], 232, "The default identifier for the content part in software documents MUST be \"//#\" followed by a single space."]], [[[103, 104], 232, "This identifier of content parts MUST be configurable."]], [[[105, 106], 232, "All content part lines MUST be consecutive."]]], "requirements": [100, 102, 104, 106]}, {"id": "2.4", "title": "Matching", "lines": ["2.4.   Matching", "", "   Duvet needs to be able to match annotation content.  Both to other", "   annotations and to specifications.  This matching is used to report", "   on requirements.", ""]}, {"id": "2.4.1", "title": "requirement", "lines": [[[[107, 108], 240, "For an annotation to match a specification the annotation's content MUST exist in the specification's section identified by the annotation's meta location URL."]], [[[109, 110], 240, "The match between the annotation content and the specification text MUST be case-sensitive but MUST NOT be white space sensitive and MUST uniquely identify text in the specification."]], [[[111, 112], 240, "Elements of a list MUST NOT be matched by their order within the list."]], [[[113, 114], 226, "Rows of a table MUST NOT be matched by their order within the table."]], [[[115, 116], 98, "This means that an annotation MAY contain a table that is a subset of the rows in the specification."]]], "requirements": [108, 110, 112, 114, 116]}, {"id": "2.5", "title": "Labels", "lines": [[[[117, 118, 119], 244, "Duvet MUST analyze the matching annotations, generating Matching Labels."]], [[[120, 121, 122], 116, "Matching Labels MAY be exclusive."]]], "requirements": [119, 122]}, {"id": "2.5.1", "title": "Implemented", "lines": [[[[123, 124, 125], 244, "A specification requirement MUST be labeled \"Implemented\" if there exists at least one matching annotation of type:"]]], "requirements": [125]}, {"id": "2.5.2", "title": "Attested", "lines": [[[[126, 127, 128], 244, "A specification requirement MUST be labeled \"Attested\" if there exists at least one matching annotation of type"]]], "requirements": [128]}, {"id": "2.5.3", "title": "Excused", "lines": [[[[129, 130], 225, "A specification requirement MUST be labeled \"Excused\" and MUST only be labeled \"Excused\" if there exists a matching annotation of type \"exception\" and the annotation has a \"reason\"."]]], "requirements": [130]}, {"id": "2.5.4", "title": "Unexcused", "lines": [[[[131, 132], 240, "A specification requirement MUST be labeled \"Unexcused\" and MUST only be labeled \"Unexcused\" if there exists a matching annotation of type \"exception\" and the annotation does NOT have a \"reason\"."]]], "requirements": [132]}, {"id": "2.6", "title": "Report", "lines": ["2.6.   Report", "", "   Duvet's report shows how your project conforms to specifications.", "   This lets you bound the correctness of your project.  As you annotate", "   the code in your project Duvet's report creates links between the", "   implementation, the specification, and attestations.", "", "   Duvet's report aids customers in annotating their code.", ""]}, {"id": "2.6.1", "title": "Status", "lines": [[[[133, 134, 135], 240, "Duvet MUST analyze the matching labels for every requirement; the result of this analysis is the requirement's Status."]], [[[136, 137], 232, "Requirement Statuses MUST be exclusive."]], [[[138, 139, 140], 244, "The Requirement Statuses MUST be:"]]], "requirements": [135, 137, 140]}, {"id": "2.6.2", "title": "Pass/Fail", "lines": [[[[141, 142], 225, "For Duvet to pass the Status of every \"MUST\" and \"MUST NOT\" requirement MUST be Complete or Excused."]], [[[143, 144], 232, "Duvet MUST return \"0\" for Pass."]], [[[145, 146], 168, "Duvet SHOULD print a success message."]], [[[147, 148], 232, "Duvet MUST NOT return \"0\" for Fail."]], [[[149, 150], 168, "Duvet SHOULD print a failure message."]]], "requirements": [142, 144, 146, 148, 150]}, {"id": "2.6.3", "title": "Summary", "lines": [[[[151, 152], 232, "It MUST have all a link for each included specifications."]], [[[153, 154], 232, "It MUST have all a link for annotations that do not match any included specifications."]], [[[155, 156], 225, "It MUST have all a link for annotations not associated with any specifications."]], [[[157, 158], 232, "For each link it MUST have a table summarizing the matrix of requirements crossed annotation types, and include totals for both sides."]]], "requirements": [152, 154, 156, 158]}, {"id": "2.6.4", "title": "Overview", "lines": [[[[159, 160], 232, "It MUST have a table summarizing the matrix of requirements across annotation types, and include totals for both sides."]], [[[161, 162], 232, "It MUST show a table with a row for each requirement."]], [[[163, 164], 232, "The table MUST have a column for:"]]], "requirements": [160, 162, 164]}, {"id": "2.6.5", "title": "Section", "lines": [[[[165, 166], 225, "It MUST show all text from the section."]], [[[167, 168], 232, "It MUST highlight the text for every requirement."]], [[[169, 170], 232, "It MUST highlight the text that matches any annotation."]], [[[171, 172], 232, "Any highlighted text MUST have a mouse over that shows its annotation information."]], [[[173, 174], 232, "Clicking on any highlighted text MUST bring up a popup that shows:"]], [[[175, 176], 232, "Selecting any text of the specification and right-clicking on it MUST bring up a popup for the selected text that shows:"]], [[[177, 178], 232, "It MUST show a table with a row for each requirement included in this section."]]], "requirements": [166, 168, 170, 172, 174, 176, 178]}, {"id": "3", "title": "References", "lines": ["3.   Normative References", "", "   [RFC2119]  Bradner, S., \"Key words for use in RFCs to Indicate", "              Requirement Levels\", BCP 14, RFC 2119,", "              DOI 10.17487/RFC2119, March 1997,", "              <https://www.rfc-editor.org/info/rfc2119>.", "", "   [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC", "              2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,", "              May 2017, <https://www.rfc-editor.org/info/rfc8174>.", "", "Acknowledgments", "", "Author's Address", "", "   Amazon AWS", "   Amazon AWS", "", "   Email: cryptools+rfc@amazon.com"]}]}}, "annotations": [{"source": "src/duvet/markdown_requirement_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.1", "line": 126, "type": "CITATION"}, {"source": "src/duvet/rfc_requirement_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.1", "line": 114, "type": "CITATION"}, {"source": "src/duvet/structures.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.1", "line": 329, "type": "IMPLICATION"}, {"source": "src/duvet/requirement_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.1", "line": 347, "type": "CITATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.1", "type": "SPEC", "level": "MUST", "comment": " The\n   name of the sections MUST NOT be nested. "}, {"source": "src/duvet/markdown_requirement_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.1", "line": 129, "type": "EXCEPTION"}, {"source": "src/duvet/rfc_requirement_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.1", "line": 117, "type": "EXCEPTION"}, {"source": "src/duvet/requirement_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.1", "line": 350, "type": "EXCEPTION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.1", "type": "SPEC", "level": "MUST", "comment": " A requirements section MUST\n   be the top level containing header. "}, {"source": "src/duvet/markdown_requirement_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.1", "line": 133, "type": "IMPLICATION"}, {"source": "src/duvet/rfc_requirement_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.1", "line": 121, "type": "IMPLICATION"}, {"source": "src/duvet/requirement_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.1", "line": 354, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.1", "type": "SPEC", "level": "MUST", "comment": " A header MUST NOT itself be a\n   requirement.\n"}, {"source": "src/duvet/markdown_requirement_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.1", "line": 137, "type": "TODO"}, {"source": "src/duvet/rfc_requirement_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.1", "line": 125, "type": "TODO"}, {"source": "src/duvet/requirement_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.1", "line": 358, "type": "TODO"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.1", "type": "SPEC", "level": "MUST", "comment": "\n   A section MUST be indexable by combining different levels of naming.\n"}, {"source": "src/duvet/requirement_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.2", "line": 282, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.2", "type": "SPEC", "level": "MUST", "comment": "\n\n   Any complete sentence containing at least one RFC 2119 keyword MUST\n   be treated as a requirement. "}, {"source": "src/duvet/requirement_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.2", "line": 285, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.2", "type": "SPEC", "level": "MAY", "comment": " A requirement MAY contain multiple RFC\n   2119 keywords. "}, {"source": "src/duvet/markdown_requirement_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.2", "line": 103, "type": "IMPLICATION"}, {"source": "src/duvet/rfc_requirement_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.2", "line": 91, "type": "IMPLICATION"}, {"source": "src/duvet/requirement_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.2", "line": 78, "type": "IMPLICATION"}, {"source": "src/duvet/requirement_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.2", "line": 122, "type": "CITATION"}, {"source": "src/duvet/requirement_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.2", "line": 171, "type": "CITATION"}, {"source": "src/duvet/requirement_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.2", "line": 324, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.2", "type": "SPEC", "level": "MUST", "comment": " A requirement MUST be terminated by one of the\n   following:\n"}, {"source": "src/duvet/markdown_requirement_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.2", "line": 107, "type": "IMPLICATION"}, {"source": "src/duvet/rfc_requirement_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.2", "line": 95, "type": "IMPLICATION"}, {"source": "src/duvet/requirement_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.2", "line": 328, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.2", "type": "SPEC", "level": "MUST", "comment": "   In the case of requirement terminated by a list, the text proceeding\n   the list MUST be concatenated with each element of the list to form a\n   requirement. "}, {"source": "src/duvet/markdown_requirement_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.2", "line": 112, "type": "IMPLICATION"}, {"source": "src/duvet/rfc_requirement_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.2", "line": 100, "type": "IMPLICATION"}, {"source": "src/duvet/requirement_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.2", "line": 333, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.2", "type": "SPEC", "level": "MAY", "comment": " List elements MAY have RFC 2119 keywords, this is the\n   same as regular sentences with multiple keywords. "}, {"source": "src/duvet/markdown_requirement_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.2", "line": 121, "type": "TODO"}, {"source": "src/duvet/markdown_requirement_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.2", "line": 141, "type": "TODO"}, {"source": "src/duvet/rfc_requirement_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.2", "line": 109, "type": "TODO"}, {"source": "src/duvet/rfc_requirement_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.2", "line": 129, "type": "TODO"}, {"source": "src/duvet/requirement_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.2", "line": 342, "type": "TODO"}, {"source": "src/duvet/requirement_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.2", "line": 362, "type": "TODO"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.2", "type": "SPEC", "level": "MUST", "comment": " Sublists MUST be\n   treated as if the parent item were terminated by the sublist. "}, {"source": "src/duvet/requirement_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.2", "line": 204, "type": "CITATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.2", "type": "SPEC", "level": "MUST", "comment": " List\n   elements MAY contain a period (.) or exclamation point (!) and this\n   punctuation MUST NOT terminate the requirement by excluding the\n   following elements from the list of requirements.\n"}, {"source": "compliance_exceptions/exception.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.2", "line": 3, "type": "EXCEPTION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.2", "type": "SPEC", "level": "SHOULD", "comment": "\n   In the case of requirement terminated by a table, the text proceeding\n   the table SHOULD be concatenated with each row of the table to form a\n   requirement. "}, {"source": "compliance_exceptions/exception.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.2", "line": 7, "type": "EXCEPTION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.2", "type": "SPEC", "level": "MAY", "comment": " Table cells MAY have RFC 2119 keywords, this is the\n   same as regular sentences with multiple keywords. "}, {"source": "compliance_exceptions/exception.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.2", "line": 11, "type": "EXCEPTION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.2", "type": "SPEC", "level": "MUST", "comment": " Table cells MAY\n   contain a period (.) or exclamation point (!) and this punctuation\n   MUST NOT terminate the requirement by excluding the following rows\n   from the table of requirements.\n"}, {"source": "src/duvet/annotation_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.3", "line": 195, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.3", "type": "SPEC", "level": "MUST", "comment": " For backwards compatibility Duvet MUST\n   support this older simpler form of requirement identification. "}, {"source": "src/duvet/annotation_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.3", "line": 199, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.3", "type": "SPEC", "level": "MUST", "comment": " Any\n   complete sentence containing at least one RFC 2119 keyword MUST be\n   treated as a requirement. "}, {"source": "src/duvet/annotation_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.3", "line": 203, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.3", "type": "SPEC", "level": "MAY", "comment": " A requirement MAY contain multiple RFC\n   2119 keywords. "}, {"source": "src/duvet/annotation_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.3", "line": 207, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.3", "type": "SPEC", "level": "MUST", "comment": " A requirement MUST be terminated by one of the\n   following:\n"}, {"source": "src/duvet/annotation_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.3", "line": 211, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.3", "type": "SPEC", "level": "MUST", "comment": " For a\n   given a specification Duvet MUST use one way to identify\n   requirements.\n"}, {"source": "src/duvet/rfc.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.4", "line": 110, "type": "TODO"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.4", "type": "SPEC", "level": "MUST", "comment": "   Duvet MUST be able to parse specifications formatted as:\n"}, {"source": "test/unit/test_annotation_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.4.1", "line": 114, "type": "TEST"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.4.1", "type": "SPEC", "level": "SHOULD", "comment": "\n\n   Duvet SHOULD be able to parse requirements formatted as Toml files.\n"}, {"source": "src/duvet/structures.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.4.1", "line": 325, "type": "TODO"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.2.4.1", "type": "SPEC", "level": "SHOULD", "comment": "\n   Duvet SHOULD be able to record parsed requirements into Toml Files.\n"}, {"source": "src/duvet/annotation_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.1", "line": 186, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.1", "type": "SPEC", "level": "MUST", "comment": "\n\n   The default identifier for the meta part in source documents MUST be\n   //= followed by a single space. "}, {"source": "src/duvet/annotation_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.1", "line": 37, "type": "IMPLICATION"}, {"source": "src/duvet/_config.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.1", "line": 142, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.1", "type": "SPEC", "level": "MUST", "comment": " This identifier of meta parts MUST\n   be configurable.\n"}, {"source": "src/duvet/annotation_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.2", "line": 54, "type": "CITATION"}, {"source": "test/unit/test_annotation_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.2", "line": 101, "type": "TEST"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.2", "type": "SPEC", "level": "MUST", "comment": "\n\n   The first line of the meta part identifies the location of the\n   content, it MUST be parsed as a URL. "}, {"source": "src/duvet/annotation_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.2", "line": 96, "type": "CITATION"}, {"source": "test/unit/test_annotation_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.2", "line": 105, "type": "TEST"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.2", "type": "SPEC", "level": "MUST", "comment": " All parts of the URL other than\n   a URL fragment MUST be optional and MUST identify the specification\n   that contains this section and content. "}, {"source": "src/duvet/annotation_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.2", "line": 99, "type": "CITATION"}, {"source": "test/unit/test_annotation_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.2", "line": 110, "type": "TEST"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.2", "type": "SPEC", "level": "MUST", "comment": " The URL MUST contain a URL\n   fragment that uniquely identifies the section that contains this\n   content. "}, {"source": "src/duvet/annotation_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.3", "line": 108, "type": "CITATION"}, {"source": "test/unit/test_annotation_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.3", "line": 118, "type": "TEST"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.3", "type": "SPEC", "level": "MUST", "comment": "\n\n   If the meta part is a single line then the type MUST be citation. "}, {"source": "src/duvet/annotation_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.3", "line": 110, "type": "CITATION"}, {"source": "test/unit/test_annotation_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.3", "line": 122, "type": "TEST"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.3", "type": "SPEC", "level": "MUST", "comment": " If\n   a second meta line exists it MUST start with \"type=\". "}, {"source": "src/duvet/annotation_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.3", "line": 112, "type": "CITATION"}, {"source": "test/unit/test_annotation_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.3", "line": 126, "type": "TEST"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.3", "type": "SPEC", "level": "MUST", "comment": " The type MUST\n   be a valid annotation type string:\n"}, {"source": "src/duvet/annotation_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.4", "line": 60, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.4", "type": "SPEC", "level": "MAY", "comment": "\n\n   A third meta line MAY exist: Reason. "}, {"source": "src/duvet/annotation_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.4", "line": 58, "type": "CITATION"}, {"source": "test/unit/test_annotation_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.4", "line": 97, "type": "TEST"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.4", "type": "SPEC", "level": "MUST", "comment": " It MUST start with \"reason=\".\n"}, {"source": "src/duvet/annotation_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.4", "line": 63, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.4", "type": "SPEC", "level": "MUST", "comment": "   The rest of this line and the following meta lines MUST be parsed as\n   the annotation's reason until there are no more meta lines.\n"}, {"source": "src/duvet/markdown_requirement_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.6", "line": 117, "type": "IMPLICATION"}, {"source": "src/duvet/rfc_requirement_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.6", "line": 105, "type": "IMPLICATION"}, {"source": "src/duvet/requirement_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.6", "line": 338, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.6", "type": "SPEC", "level": "MUST", "comment": "\n\n   A one or more line meta part MUST be followed by at least a one line\n   content part. "}, {"source": "src/duvet/identifiers.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.6", "line": 86, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.6", "type": "SPEC", "level": "MUST", "comment": " The default identifier for the content part in\n   software documents MUST be \"//#\" followed by a single space. "}, {"source": "src/duvet/_config.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.6", "line": 146, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.6", "type": "SPEC", "level": "MUST", "comment": " This\n   identifier of content parts MUST be configurable. "}, {"source": "src/duvet/_config.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.6", "line": 150, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.3.6", "type": "SPEC", "level": "MUST", "comment": " All content part\n   lines MUST be consecutive.\n"}, {"source": "src/duvet/annotation_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.4.1", "line": 215, "type": "CITATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.4.1", "type": "SPEC", "level": "MUST", "comment": "\n\n   For an annotation to match a specification the annotation's content\n   MUST exist in the specification's section identified by the\n   annotation's meta location URL. "}, {"source": "src/duvet/annotation_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.4.1", "line": 219, "type": "CITATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.4.1", "type": "SPEC", "level": "MUST", "comment": " The match between the annotation\n   content and the specification text MUST be case-sensitive but MUST\n   NOT be white space sensitive and MUST uniquely identify text in the\n   specification. "}, {"source": "src/duvet/annotation_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.4.1", "line": 223, "type": "CITATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.4.1", "type": "SPEC", "level": "MUST", "comment": " Elements of a list MUST NOT be matched\n   by their order within the list. "}, {"source": "src/duvet/annotation_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.4.1", "line": 226, "type": "EXCEPTION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.4.1", "type": "SPEC", "level": "MUST", "comment": "   Rows of a table MUST NOT be matched by their order within the table.\n"}, {"source": "src/duvet/annotation_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.4.1", "line": 230, "type": "EXCEPTION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.4.1", "type": "SPEC", "level": "MAY", "comment": "   This means that an annotation MAY contain a table that is a subset of\n   the rows in the specification.\n"}, {"source": "src/duvet/summary.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.5", "line": 66, "type": "CITATION"}, {"source": "test/unit/test_summary.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.5", "line": 63, "type": "TEST"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.5", "type": "SPEC", "level": "MUST", "comment": "\n\n   Duvet MUST analyze the matching annotations, generating Matching\n   Labels. "}, {"source": "src/duvet/summary.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.5", "line": 72, "type": "CITATION"}, {"source": "test/unit/test_summary.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.5", "line": 71, "type": "TEST"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.5", "type": "SPEC", "level": "MAY", "comment": " Matching Labels MAY be exclusive. "}, {"source": "src/duvet/identifiers.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.5.1", "line": 42, "type": "CITATION"}, {"source": "test/integration/test_implementation_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.5.1", "line": 68, "type": "TEST"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.5.1", "type": "SPEC", "level": "MUST", "comment": "   A specification requirement MUST be labeled \"Implemented\" if there\n   exists at least one matching annotation of type:\n"}, {"source": "src/duvet/identifiers.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.5.2", "line": 52, "type": "CITATION"}, {"source": "test/functional/test_annotation_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.5.2", "line": 49, "type": "TEST"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.5.2", "type": "SPEC", "level": "MUST", "comment": "   A specification requirement MUST be labeled \"Attested\" if there\n   exists at least one matching annotation of type\n"}, {"source": "src/duvet/annotation_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.5.3", "line": 190, "type": "TODO"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.5.3", "type": "SPEC", "level": "MUST", "comment": "\n\n   A specification requirement MUST be labeled \"Excused\" and MUST only\n   be labeled \"Excused\" if there exists a matching annotation of type\n   \"exception\" and the annotation has a \"reason\".\n"}, {"source": "src/duvet/summary.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.5.4", "line": 75, "type": "CITATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.5.4", "type": "SPEC", "level": "MUST", "comment": "\n\n   A specification requirement MUST be labeled \"Unexcused\" and MUST only\n   be labeled \"Unexcused\" if there exists a matching annotation of type\n   \"exception\" and the annotation does NOT have a \"reason\".\n"}, {"source": "src/duvet/structures.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.1", "line": 333, "type": "CITATION"}, {"source": "test/integration/test_implementation_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.1", "line": 36, "type": "CITATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.1", "type": "SPEC", "level": "MUST", "comment": "\n\n   Duvet MUST analyze the matching labels for every requirement; the\n   result of this analysis is the requirement's Status. "}, {"source": "src/duvet/structures.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.1", "line": 337, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.1", "type": "SPEC", "level": "MUST", "comment": " Requirement\n   Statuses MUST be exclusive.\n"}, {"source": "src/duvet/structures.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.1", "line": 98, "type": "CITATION"}, {"source": "test/integration/test_implementation_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.1", "line": 40, "type": "TEST"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.1", "type": "SPEC", "level": "MUST", "comment": "\n   The Requirement Statuses MUST be:\n"}, {"source": "src/duvet/annotation_parser.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.2", "line": 234, "type": "TODO"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.2", "type": "SPEC", "level": "MUST", "comment": "\n\n   For Duvet to pass the Status of every \"MUST\" and \"MUST NOT\"\n   requirement MUST be Complete or Excused.\n"}, {"source": "src/duvet/cli.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.2", "line": 60, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.2", "type": "SPEC", "level": "MUST", "comment": "   Duvet MUST return \"0\" for Pass. "}, {"source": "src/duvet/cli.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.2", "line": 54, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.2", "type": "SPEC", "level": "SHOULD", "comment": " Duvet SHOULD print a success\n   message.\n"}, {"source": "src/duvet/cli.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.2", "line": 51, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.2", "type": "SPEC", "level": "MUST", "comment": "   Duvet MUST NOT return \"0\" for Fail. "}, {"source": "src/duvet/cli.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.2", "line": 63, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.2", "type": "SPEC", "level": "SHOULD", "comment": " Duvet SHOULD print a failure\n   message.\n"}, {"source": "src/duvet/html.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.3", "line": 66, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.3", "type": "SPEC", "level": "MUST", "comment": " It MUST have all a link for\n   each included specifications. "}, {"source": "src/duvet/html.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.3", "line": 75, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.3", "type": "SPEC", "level": "MUST", "comment": " It MUST have all a link for\n   annotations that do not match any included specifications. "}, {"source": "src/duvet/html.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.3", "line": 79, "type": "TODO"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.3", "type": "SPEC", "level": "MUST", "comment": " It MUST\n   have all a link for annotations not associated with any\n   specifications. "}, {"source": "src/duvet/html.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.3", "line": 70, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.3", "type": "SPEC", "level": "MUST", "comment": " For each link it MUST have a table summarizing the\n   matrix of requirements crossed annotation types, and include totals\n   for both sides.\n"}, {"source": "src/duvet/html.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.4", "line": 83, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.4", "type": "SPEC", "level": "MUST", "comment": " It MUST have a table summarizing the matrix\n   of requirements across annotation types, and include totals for both\n   sides. "}, {"source": "src/duvet/html.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.4", "line": 88, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.4", "type": "SPEC", "level": "MUST", "comment": " It MUST show a table with a row for each requirement. "}, {"source": "src/duvet/html.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.4", "line": 92, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.4", "type": "SPEC", "level": "MUST", "comment": " The\n   table MUST have a column for:\n"}, {"source": "src/duvet/html.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.5", "line": 96, "type": "TODO"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.5", "type": "SPEC", "level": "MUST", "comment": " It MUST show all text from the\n   section. "}, {"source": "src/duvet/html.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.5", "line": 104, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.5", "type": "SPEC", "level": "MUST", "comment": " It MUST highlight the text for every requirement. "}, {"source": "src/duvet/html.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.5", "line": 108, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.5", "type": "SPEC", "level": "MUST", "comment": " It MUST\n   highlight the text that matches any annotation. "}, {"source": "src/duvet/html.py", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.5", "line": 112, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.5", "type": "SPEC", "level": "MUST", "comment": " Any highlighted text\n   MUST have a mouse over that shows its annotation information.\n"}, {"source": "www/src/spec.js", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.5", "line": 276, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.5", "type": "SPEC", "level": "MUST", "comment": "   Clicking on any highlighted text MUST bring up a popup that shows:\n"}, {"source": "www/src/spec.js", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.5", "line": 284, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.5", "type": "SPEC", "level": "MUST", "comment": " Selecting any text of the specification and right-clicking on it MUST\n   bring up a popup for the selected text that shows:\n"}, {"source": "www/src/spec.js", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.5", "line": 289, "type": "IMPLICATION"}, {"source": "compliance/duvet-specification.txt", "target_path": "compliance/duvet-specification.txt", "target_section": "2.6.5", "type": "SPEC", "level": "MUST", "comment": "   It MUST show a table with a row for each requirement included in this\n   section. "}], "statuses": {"4": {"spec": 49, "citation": 49, "implication": 49, "related": [0, 1, 2, 3, 4]}, "8": {"spec": 68, "exception": 68, "related": [5, 6, 7, 8]}, "12": {"spec": 47, "implication": 47, "related": [9, 10, 11, 12]}, "16": {"spec": 73, "todo": 73, "related": [13, 14, 15, 16]}, "18": {"spec": 105, "implication": 105, "related": [17, 18]}, "20": {"spec": 58, "implication": 58, "related": [19, 20]}, "27": {"spec": 62, "citation": 62, "implication": 62, "related": [21, 22, 23, 24, 25, 26, 27]}, "31": {"spec": 161, "implication": 161, "related": [28, 29, 30, 31]}, "35": {"spec": 108, "implication": 108, "related": [32, 33, 34, 35]}, "42": {"spec": 83, "todo": 83, "related": [36, 37, 38, 39, 40, 41, 42]}, "44": {"spec": 197, "citation": 197, "related": [43, 44]}, "46": {"spec": 163, "exception": 163, "related": [45, 46]}, "48": {"spec": 106, "exception": 106, "related": [47, 48]}, "50": {"spec": 192, "exception": 192, "related": [49, 50]}, "52": {"spec": 106, "implication": 106, "related": [51, 52]}, "54": {"spec": 104, "implication": 104, "related": [53, 54]}, "56": {"spec": 58, "implication": 58, "related": [55, 56]}, "58": {"spec": 62, "implication": 62, "related": [57, 58]}, "60": {"spec": 84, "implication": 84, "related": [59, 60]}, "62": {"spec": 60, "todo": 60, "related": [61, 62]}, "64": {"spec": 73, "test": 73, "related": [63, 64]}, "66": {"spec": 72, "todo": 72, "related": [65, 66]}, "68": {"spec": 109, "implication": 109, "related": [67, 68]}, "71": {"spec": 56, "implication": 56, "related": [69, 70, 71]}, "74": {"spec": 108, "citation": 108, "test": 108, "related": [72, 73, 74]}, "77": {"spec": 147, "citation": 147, "test": 147, "related": [75, 76, 77]}, "80": {"spec": 108, "citation": 108, "test": 108, "related": [78, 79, 80]}, "83": {"spec": 71, "citation": 71, "test": 71, "related": [81, 82, 83]}, "86": {"spec": 61, "citation": 61, "test": 61, "related": [84, 85, 86]}, "89": {"spec": 53, "citation": 53, "test": 53, "related": [87, 88, 89]}, "91": {"spec": 42, "implication": 42, "related": [90, 91]}, "94": {"spec": 31, "citation": 31, "test": 31, "related": [92, 93, 94]}, "96": {"spec": 135, "implication": 135, "related": [95, 96]}, "100": {"spec": 91, "implication": 91, "related": [97, 98, 99, 100]}, "102": {"spec": 112, "implication": 112, "related": [101, 102]}, "104": {"spec": 59, "implication": 59, "related": [103, 104]}, "106": {"spec": 48, "implication": 48, "related": [105, 106]}, "108": {"spec": 171, "citation": 171, "related": [107, 108]}, "110": {"spec": 193, "citation": 193, "related": [109, 110]}, "112": {"spec": 75, "citation": 75, "related": [111, 112]}, "114": {"spec": 72, "exception": 72, "related": [113, 114]}, "116": {"spec": 107, "exception": 107, "related": [115, 116]}, "119": {"spec": 81, "citation": 81, "test": 81, "related": [117, 118, 119]}, "122": {"spec": 35, "citation": 35, "test": 35, "related": [120, 121, 122]}, "125": {"spec": 122, "citation": 122, "test": 122, "related": [123, 124, 125]}, "128": {"spec": 118, "citation": 118, "test": 118, "related": [126, 127, 128]}, "130": {"spec": 193, "todo": 193, "related": [129, 130]}, "132": {"spec": 207, "citation": 207, "related": [131, 132]}, "135": {"spec": 127, "citation": 127, "related": [133, 134, 135]}, "137": {"spec": 44, "implication": 44, "related": [136, 137]}, "140": {"spec": 38, "citation": 38, "test": 38, "related": [138, 139, 140]}, "142": {"spec": 109, "todo": 109, "related": [141, 142]}, "144": {"spec": 35, "implication": 35, "related": [143, 144]}, "146": {"spec": 42, "implication": 42, "related": [145, 146]}, "148": {"spec": 39, "implication": 39, "related": [147, 148]}, "150": {"spec": 42, "implication": 42, "related": [149, 150]}, "152": {"spec": 62, "implication": 62, "related": [151, 152]}, "154": {"spec": 91, "implication": 91, "related": [153, 154]}, "156": {"spec": 87, "todo": 87, "related": [155, 156]}, "158": {"spec": 142, "implication": 142, "related": [157, 158]}, "160": {"spec": 127, "implication": 127, "related": [159, 160]}, "162": {"spec": 55, "implication": 55, "related": [161, 162]}, "164": {"spec": 38, "implication": 38, "related": [163, 164]}, "166": {"spec": 44, "todo": 44, "related": [165, 166]}, "168": {"spec": 51, "implication": 51, "related": [167, 168]}, "170": {"spec": 60, "implication": 60, "related": [169, 170]}, "172": {"spec": 87, "implication": 87, "related": [171, 172]}, "174": {"spec": 70, "implication": 70, "related": [173, 174]}, "176": {"spec": 125, "implication": 125, "related": [175, 176]}, "178": {"spec": 85, "implication": 85, "related": [177, 178]}}, "refs": [{}, {"todo": true}, {"exception": true}, {"exception": true, "todo": true}, {"test": true}, {"test": true, "todo": true}, {"test": true, "exception": true}, {"test": true, "exception": true, "todo": true}, {"implication": true}, {"implication": true, "todo": true}, {"implication": true, "exception": true}, {"implication": true, "exception": true, "todo": true}, {"implication": true, "test": true}, {"implication": true, "test": true, "todo": true}, {"implication": true, "test": true, "exception": true}, {"implication": true, "test": true, "exception": true, "todo": true}, {"citation": true}, {"citation": true, "todo": true}, {"citation": true, "exception": true}, {"citation": true, "exception": true, "todo": true}, {"citation": true, "test": true}, {"citation": true, "test": true, "todo": true}, {"citation": true, "test": true, "exception": true}, {"citation": true, "test": true, "exception": true, "todo": true}, {"citation": true, "implication": true}, {"citation": true, "implication": true, "todo": true}, {"citation": true, "implication": true, "exception": true}, {"citation": true, "implication": true, "exception": true, "todo": true}, {"citation": true, "implication": true, "test": true}, {"citation": true, "implication": true, "test": true, "todo": true}, {"citation": true, "implication": true, "test": true, "exception": true}, {"citation": true, "implication": true, "test": true, "exception": true, "todo": true}, {"spec": true}, {"spec": true, "todo": true}, {"spec": true, "exception": true}, {"spec": true, "exception": true, "todo": true}, {"spec": true, "test": true}, {"spec": true, "test": true, "todo": true}, {"spec": true, "test": true, "exception": true}, {"spec": true, "test": true, "exception": true, "todo": true}, {"spec": true, "implication": true}, {"spec": true, "implication": true, "todo": true}, {"spec": true, "implication": true, "exception": true}, {"spec": true, "implication": true, "exception": true, "todo": true}, {"spec": true, "implication": true, "test": true}, {"spec": true, "implication": true, "test": true, "todo": true}, {"spec": true, "implication": true, "test": true, "exception": true}, {"spec": true, "implication": true, "test": true, "exception": true, "todo": true}, {"spec": true, "citation": true}, {"spec": true, "citation": true, "todo": true}, {"spec": true, "citation": true, "exception": true}, {"spec": true, "citation": true, "exception": true, "todo": true}, {"spec": true, "citation": true, "test": true}, {"spec": true, "citation": true, "test": true, "todo": true}, {"spec": true, "citation": true, "test": true, "exception": true}, {"spec": true, "citation": true, "test": true, "exception": true, "todo": true}, {"spec": true, "citation": true, "implication": true}, {"spec": true, "citation": true, "implication": true, "todo": true}, {"spec": true, "citation": true, "implication": true, "exception": true}, {"spec": true, "citation": true, "implication": true, "exception": true, "todo": true}, {"spec": true, "citation": true, "implication": true, "test": true}, {"spec": true, "citation": true, "implication": true, "test": true, "todo": true}, {"spec": true, "citation": true, "implication": true, "test": true, "exception": true}, {"spec": true, "citation": true, "implication": true, "test": true, "exception": true, "todo": true}, {"level": "MAY"}, {"todo": true, "level": "MAY"}, {"exception": true, "level": "MAY"}, {"exception": true, "todo": true, "level": "MAY"}, {"test": true, "level": "MAY"}, {"test": true, "todo": true, "level": "MAY"}, {"test": true, "exception": true, "level": "MAY"}, {"test": true, "exception": true, "todo": true, "level": "MAY"}, {"implication": true, "level": "MAY"}, {"implication": true, "todo": true, "level": "MAY"}, {"implication": true, "exception": true, "level": "MAY"}, {"implication": true, "exception": true, "todo": true, "level": "MAY"}, {"implication": true, "test": true, "level": "MAY"}, {"implication": true, "test": true, "todo": true, "level": "MAY"}, {"implication": true, "test": true, "exception": true, "level": "MAY"}, {"implication": true, "test": true, "exception": true, "todo": true, "level": "MAY"}, {"citation": true, "level": "MAY"}, {"citation": true, "todo": true, "level": "MAY"}, {"citation": true, "exception": true, "level": "MAY"}, {"citation": true, "exception": true, "todo": true, "level": "MAY"}, {"citation": true, "test": true, "level": "MAY"}, {"citation": true, "test": true, "todo": true, "level": "MAY"}, {"citation": true, "test": true, "exception": true, "level": "MAY"}, {"citation": true, "test": true, "exception": true, "todo": true, "level": "MAY"}, {"citation": true, "implication": true, "level": "MAY"}, {"citation": true, "implication": true, "todo": true, "level": "MAY"}, {"citation": true, "implication": true, "exception": true, "level": "MAY"}, {"citation": true, "implication": true, "exception": true, "todo": true, "level": "MAY"}, {"citation": true, "implication": true, "test": true, "level": "MAY"}, {"citation": true, "implication": true, "test": true, "todo": true, "level": "MAY"}, {"citation": true, "implication": true, "test": true, "exception": true, "level": "MAY"}, {"citation": true, "implication": true, "test": true, "exception": true, "todo": true, "level": "MAY"}, {"spec": true, "level": "MAY"}, {"spec": true, "todo": true, "level": "MAY"}, {"spec": true, "exception": true, "level": "MAY"}, {"spec": true, "exception": true, "todo": true, "level": "MAY"}, {"spec": true, "test": true, "level": "MAY"}, {"spec": true, "test": true, "todo": true, "level": "MAY"}, {"spec": true, "test": true, "exception": true, "level": "MAY"}, {"spec": true, "test": true, "exception": true, "todo": true, "level": "MAY"}, {"spec": true, "implication": true, "level": "MAY"}, {"spec": true, "implication": true, "todo": true, "level": "MAY"}, {"spec": true, "implication": true, "exception": true, "level": "MAY"}, {"spec": true, "implication": true, "exception": true, "todo": true, "level": "MAY"}, {"spec": true, "implication": true, "test": true, "level": "MAY"}, {"spec": true, "implication": true, "test": true, "todo": true, "level": "MAY"}, {"spec": true, "implication": true, "test": true, "exception": true, "level": "MAY"}, {"spec": true, "implication": true, "test": true, "exception": true, "todo": true, "level": "MAY"}, {"spec": true, "citation": true, "level": "MAY"}, {"spec": true, "citation": true, "todo": true, "level": "MAY"}, {"spec": true, "citation": true, "exception": true, "level": "MAY"}, {"spec": true, "citation": true, "exception": true, "todo": true, "level": "MAY"}, {"spec": true, "citation": true, "test": true, "level": "MAY"}, {"spec": true, "citation": true, "test": true, "todo": true, "level": "MAY"}, {"spec": true, "citation": true, "test": true, "exception": true, "level": "MAY"}, {"spec": true, "citation": true, "test": true, "exception": true, "todo": true, "level": "MAY"}, {"spec": true, "citation": true, "implication": true, "level": "MAY"}, {"spec": true, "citation": true, "implication": true, "todo": true, "level": "MAY"}, {"spec": true, "citation": true, "implication": true, "exception": true, "level": "MAY"}, {"spec": true, "citation": true, "implication": true, "exception": true, "todo": true, "level": "MAY"}, {"spec": true, "citation": true, "implication": true, "test": true, "level": "MAY"}, {"spec": true, "citation": true, "implication": true, "test": true, "todo": true, "level": "MAY"}, {"spec": true, "citation": true, "implication": true, "test": true, "exception": true, "level": "MAY"}, {"spec": true, "citation": true, "implication": true, "test": true, "exception": true, "todo": true, "level": "MAY"}, {"level": "SHOULD"}, {"todo": true, "level": "SHOULD"}, {"exception": true, "level": "SHOULD"}, {"exception": true, "todo": true, "level": "SHOULD"}, {"test": true, "level": "SHOULD"}, {"test": true, "todo": true, "level": "SHOULD"}, {"test": true, "exception": true, "level": "SHOULD"}, {"test": true, "exception": true, "todo": true, "level": "SHOULD"}, {"implication": true, "level": "SHOULD"}, {"implication": true, "todo": true, "level": "SHOULD"}, {"implication": true, "exception": true, "level": "SHOULD"}, {"implication": true, "exception": true, "todo": true, "level": "SHOULD"}, {"implication": true, "test": true, "level": "SHOULD"}, {"implication": true, "test": true, "todo": true, "level": "SHOULD"}, {"implication": true, "test": true, "exception": true, "level": "SHOULD"}, {"implication": true, "test": true, "exception": true, "todo": true, "level": "SHOULD"}, {"citation": true, "level": "SHOULD"}, {"citation": true, "todo": true, "level": "SHOULD"}, {"citation": true, "exception": true, "level": "SHOULD"}, {"citation": true, "exception": true, "todo": true, "level": "SHOULD"}, {"citation": true, "test": true, "level": "SHOULD"}, {"citation": true, "test": true, "todo": true, "level": "SHOULD"}, {"citation": true, "test": true, "exception": true, "level": "SHOULD"}, {"citation": true, "test": true, "exception": true, "todo": true, "level": "SHOULD"}, {"citation": true, "implication": true, "level": "SHOULD"}, {"citation": true, "implication": true, "todo": true, "level": "SHOULD"}, {"citation": true, "implication": true, "exception": true, "level": "SHOULD"}, {"citation": true, "implication": true, "exception": true, "todo": true, "level": "SHOULD"}, {"citation": true, "implication": true, "test": true, "level": "SHOULD"}, {"citation": true, "implication": true, "test": true, "todo": true, "level": "SHOULD"}, {"citation": true, "implication": true, "test": true, "exception": true, "level": "SHOULD"}, {"citation": true, "implication": true, "test": true, "exception": true, "todo": true, "level": "SHOULD"}, {"spec": true, "level": "SHOULD"}, {"spec": true, "todo": true, "level": "SHOULD"}, {"spec": true, "exception": true, "level": "SHOULD"}, {"spec": true, "exception": true, "todo": true, "level": "SHOULD"}, {"spec": true, "test": true, "level": "SHOULD"}, {"spec": true, "test": true, "todo": true, "level": "SHOULD"}, {"spec": true, "test": true, "exception": true, "level": "SHOULD"}, {"spec": true, "test": true, "exception": true, "todo": true, "level": "SHOULD"}, {"spec": true, "implication": true, "level": "SHOULD"}, {"spec": true, "implication": true, "todo": true, "level": "SHOULD"}, {"spec": true, "implication": true, "exception": true, "level": "SHOULD"}, {"spec": true, "implication": true, "exception": true, "todo": true, "level": "SHOULD"}, {"spec": true, "implication": true, "test": true, "level": "SHOULD"}, {"spec": true, "implication": true, "test": true, "todo": true, "level": "SHOULD"}, {"spec": true, "implication": true, "test": true, "exception": true, "level": "SHOULD"}, {"spec": true, "implication": true, "test": true, "exception": true, "todo": true, "level": "SHOULD"}, {"spec": true, "citation": true, "level": "SHOULD"}, {"spec": true, "citation": true, "todo": true, "level": "SHOULD"}, {"spec": true, "citation": true, "exception": true, "level": "SHOULD"}, {"spec": true, "citation": true, "exception": true, "todo": true, "level": "SHOULD"}, {"spec": true, "citation": true, "test": true, "level": "SHOULD"}, {"spec": true, "citation": true, "test": true, "todo": true, "level": "SHOULD"}, {"spec": true, "citation": true, "test": true, "exception": true, "level": "SHOULD"}, {"spec": true, "citation": true, "test": true, "exception": true, "todo": true, "level": "SHOULD"}, {"spec": true, "citation": true, "implication": true, "level": "SHOULD"}, {"spec": true, "citation": true, "implication": true, "todo": true, "level": "SHOULD"}, {"spec": true, "citation": true, "implication": true, "exception": true, "level": "SHOULD"}, {"spec": true, "citation": true, "implication": true, "exception": true, "todo": true, "level": "SHOULD"}, {"spec": true, "citation": true, "implication": true, "test": true, "level": "SHOULD"}, {"spec": true, "citation": true, "implication": true, "test": true, "todo": true, "level": "SHOULD"}, {"spec": true, "citation": true, "implication": true, "test": true, "exception": true, "level": "SHOULD"}, {"spec": true, "citation": true, "implication": true, "test": true, "exception": true, "todo": true, "level": "SHOULD"}, {"level": "MUST"}, {"todo": true, "level": "MUST"}, {"exception": true, "level": "MUST"}, {"exception": true, "todo": true, "level": "MUST"}, {"test": true, "level": "MUST"}, {"test": true, "todo": true, "level": "MUST"}, {"test": true, "exception": true, "level": "MUST"}, {"test": true, "exception": true, "todo": true, "level": "MUST"}, {"implication": true, "level": "MUST"}, {"implication": true, "todo": true, "level": "MUST"}, {"implication": true, "exception": true, "level": "MUST"}, {"implication": true, "exception": true, "todo": true, "level": "MUST"}, {"implication": true, "test": true, "level": "MUST"}, {"implication": true, "test": true, "todo": true, "level": "MUST"}, {"implication": true, "test": true, "exception": true, "level": "MUST"}, {"implication": true, "test": true, "exception": true, "todo": true, "level": "MUST"}, {"citation": true, "level": "MUST"}, {"citation": true, "todo": true, "level": "MUST"}, {"citation": true, "exception": true, "level": "MUST"}, {"citation": true, "exception": true, "todo": true, "level": "MUST"}, {"citation": true, "test": true, "level": "MUST"}, {"citation": true, "test": true, "todo": true, "level": "MUST"}, {"citation": true, "test": true, "exception": true, "level": "MUST"}, {"citation": true, "test": true, "exception": true, "todo": true, "level": "MUST"}, {"citation": true, "implication": true, "level": "MUST"}, {"citation": true, "implication": true, "todo": true, "level": "MUST"}, {"citation": true, "implication": true, "exception": true, "level": "MUST"}, {"citation": true, "implication": true, "exception": true, "todo": true, "level": "MUST"}, {"citation": true, "implication": true, "test": true, "level": "MUST"}, {"citation": true, "implication": true, "test": true, "todo": true, "level": "MUST"}, {"citation": true, "implication": true, "test": true, "exception": true, "level": "MUST"}, {"citation": true, "implication": true, "test": true, "exception": true, "todo": true, "level": "MUST"}, {"spec": true, "level": "MUST"}, {"spec": true, "todo": true, "level": "MUST"}, {"spec": true, "exception": true, "level": "MUST"}, {"spec": true, "exception": true, "todo": true, "level": "MUST"}, {"spec": true, "test": true, "level": "MUST"}, {"spec": true, "test": true, "todo": true, "level": "MUST"}, {"spec": true, "test": true, "exception": true, "level": "MUST"}, {"spec": true, "test": true, "exception": true, "todo": true, "level": "MUST"}, {"spec": true, "implication": true, "level": "MUST"}, {"spec": true, "implication": true, "todo": true, "level": "MUST"}, {"spec": true, "implication": true, "exception": true, "level": "MUST"}, {"spec": true, "implication": true, "exception": true, "todo": true, "level": "MUST"}, {"spec": true, "implication": true, "test": true, "level": "MUST"}, {"spec": true, "implication": true, "test": true, "todo": true, "level": "MUST"}, {"spec": true, "implication": true, "test": true, "exception": true, "level": "MUST"}, {"spec": true, "implication": true, "test": true, "exception": true, "todo": true, "level": "MUST"}, {"spec": true, "citation": true, "level": "MUST"}, {"spec": true, "citation": true, "todo": true, "level": "MUST"}, {"spec": true, "citation": true, "exception": true, "level": "MUST"}, {"spec": true, "citation": true, "exception": true, "todo": true, "level": "MUST"}, {"spec": true, "citation": true, "test": true, "level": "MUST"}, {"spec": true, "citation": true, "test": true, "todo": true, "level": "MUST"}, {"spec": true, "citation": true, "test": true, "exception": true, "level": "MUST"}, {"spec": true, "citation": true, "test": true, "exception": true, "todo": true, "level": "MUST"}, {"spec": true, "citation": true, "implication": true, "level": "MUST"}, {"spec": true, "citation": true, "implication": true, "todo": true, "level": "MUST"}, {"spec": true, "citation": true, "implication": true, "exception": true, "level": "MUST"}, {"spec": true, "citation": true, "implication": true, "exception": true, "todo": true, "level": "MUST"}, {"spec": true, "citation": true, "implication": true, "test": true, "level": "MUST"}, {"spec": true, "citation": true, "implication": true, "test": true, "todo": true, "level": "MUST"}, {"spec": true, "citation": true, "implication": true, "test": true, "exception": true, "level": "MUST"}, {"spec": true, "citation": true, "implication": true, "test": true, "exception": true, "todo": true, "level": "MUST"}]}